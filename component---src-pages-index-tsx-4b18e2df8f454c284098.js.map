{"version":3,"file":"component---src-pages-index-tsx-4b18e2df8f454c284098.js","mappings":"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","sources":["webpack://hyeokjaelee.github.io/./src/components/nav.tsx","webpack://hyeokjaelee.github.io/./src/pages/index.tsx","webpack://hyeokjaelee.github.io/./src/assets/img/left-arrow.svg","webpack://hyeokjaelee.github.io/./src/assets/img/right-arrow.svg"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nexport const Nav = (props: any) => {\r\n  const { navItem } = props;\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"nav-item\"> {navItem}</div>\r\n      <ul className=\"nav-item link\">\r\n        <li>\r\n          <Link to=\"/\">Posts</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport { Nav } from \"../components/nav\";\r\nimport LeftArrow from \"../assets/img/left-arrow.svg\";\r\nimport RightArrow from \"../assets/img/right-arrow.svg\";\r\n\r\ninterface Node {\r\n  excerpt: string;\r\n  fields: { slug: string };\r\n  frontmatter: {\r\n    emoji: string;\r\n    title: string;\r\n    date: string;\r\n    description: string;\r\n    tag: string[];\r\n  };\r\n}\r\ninterface Group {\r\n  tag: string;\r\n  totalCount: number;\r\n}\r\ninterface Props {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      group: Group[];\r\n      nodes: Node[];\r\n    };\r\n  };\r\n}\r\n\r\nconst Index = ({ data }: Props) => {\r\n  /**페이지 당 보여줄 포스트 갯수*/\r\n  const postsPerPage = 7;\r\n  const { group, nodes } = data.allMarkdownRemark;\r\n  const [targetTagList, setTargetTagList] = useState<string[]>([]);\r\n  const [filteredNodes, setFilteredNodes] = useState<Node[]>(nodes);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  /**필터링할 태그 선택*/\r\n  const check_tag = (tag: string) => (targetTagList.indexOf(tag) !== -1 ? \"checked\" : \"\");\r\n  const TagFilter = () => (\r\n    <div className=\"tags all-posts\">\r\n      {group.map((item, entireTagListIndex) => {\r\n        const filter_posts_by_tag = () => {\r\n          setCurrentPage(1);\r\n          setFilteredNodes(nodes);\r\n          const tagIndex = targetTagList.indexOf(item.tag);\r\n          if (tagIndex === -1) {\r\n            targetTagList.push(item.tag);\r\n          } else {\r\n            targetTagList.splice(tagIndex, 1);\r\n          }\r\n          setTargetTagList(targetTagList);\r\n          if (targetTagList.length > 0) {\r\n            setFilteredNodes(\r\n              //선택된 태그의 갯수와 Post의 태그가 선택된 태그에 포함되는 갯수가 같아야 함\r\n              nodes.filter(\r\n                (node) =>\r\n                  node.frontmatter.tag.filter((_tag) => targetTagList.includes(_tag)).length ===\r\n                  targetTagList.length\r\n              )\r\n            );\r\n          }\r\n        };\r\n        return (\r\n          <a\r\n            key={`entireTag${entireTagListIndex}`}\r\n            onClick={filter_posts_by_tag}\r\n            className={\"tag \" + check_tag(item.tag)}\r\n          >\r\n            {item.tag}\r\n          </a>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n  const PageNavi = () => {\r\n    const totalPostCount = filteredNodes.length;\r\n    const totalPageCount = Math.ceil(totalPostCount / postsPerPage);\r\n    const pageIndexList: JSX.Element[] = [];\r\n    const nearPageCount = totalPageCount < 5 ? totalPageCount : 5;\r\n    let startPageIndex = currentPage,\r\n      endPageIndex = currentPage;\r\n    for (\r\n      let viewingPage = 0;\r\n      viewingPage < nearPageCount;\r\n      viewingPage = endPageIndex - startPageIndex + 1\r\n    ) {\r\n      startPageIndex = startPageIndex <= 1 ? 1 : startPageIndex - 1;\r\n      endPageIndex = endPageIndex >= totalPageCount ? totalPageCount : endPageIndex + 1;\r\n    }\r\n    for (let pageIndex = startPageIndex; pageIndex <= endPageIndex; pageIndex++) {\r\n      const className = pageIndex === currentPage ? \"currentPage\" : \"\";\r\n      pageIndexList.push(\r\n        <a\r\n          onClick={() => {\r\n            setCurrentPage(pageIndex);\r\n          }}\r\n          className={className}\r\n        >\r\n          {pageIndex}\r\n        </a>\r\n      );\r\n    }\r\n    const leftArrowHide = startPageIndex === 1 ? \"hide\" : \"\";\r\n    const rightArrowHide = endPageIndex >= totalPageCount ? \"hide\" : \"\";\r\n    const PageNaviArrow = (props: { Arrow: any; toMove: number; hide: \"hide\" | \"\" }) => (\r\n      <a\r\n        onClick={() => {\r\n          setCurrentPage(props.toMove);\r\n        }}\r\n        className={\"arrow \" + props.hide}\r\n      >\r\n        <props.Arrow className=\"arrow-svg\" />\r\n      </a>\r\n    );\r\n    return (\r\n      <div className=\"pageNav\">\r\n        <PageNaviArrow Arrow={LeftArrow} toMove={startPageIndex - 1} hide={leftArrowHide} />\r\n        {pageIndexList}\r\n        <PageNaviArrow Arrow={RightArrow} toMove={endPageIndex + 1} hide={rightArrowHide} />\r\n      </div>\r\n    );\r\n  };\r\n  const Posts = () => {\r\n    const viewingNodes = filteredNodes.slice(\r\n      (currentPage - 1) * postsPerPage,\r\n      currentPage * postsPerPage\r\n    );\r\n    const emptyPost = (\r\n      <div className=\"emptyPost\">\r\n        <div className=\"icon\">🚧</div>\r\n        <h1>OOPSE!</h1>\r\n        <p>조건을 만족하는 Post가 없습니다.</p>\r\n      </div>\r\n    );\r\n    const postList = viewingNodes.map((node, postListIndex) => {\r\n      const { emoji, title, date, description, tag } = node.frontmatter;\r\n      const IndividualsTagList = tag.map((_tag, individualsTagIndex) => (\r\n        <li key={`individualsTag${individualsTagIndex}`} className={check_tag(_tag)}>\r\n          {_tag}\r\n        </li>\r\n      ));\r\n      return (\r\n        <li key={`postList${postListIndex}`}>\r\n          <Link to={node.fields.slug}>\r\n            <div>\r\n              <i>Posted on {date}</i>\r\n              <h2>\r\n                {emoji} {title}\r\n              </h2>\r\n              <p>{description}</p>\r\n              <ul className=\"tags each-post on-index\">{IndividualsTagList}</ul>\r\n            </div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n    return <ul className=\"posts\">{postList.length === 0 ? emptyPost : postList}</ul>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <section className=\"content first\">\r\n        <TagFilter />\r\n        <Posts />\r\n        <PageNavi />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const data = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\r\n      group(field: frontmatter___tag) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          emoji\r\n          date\r\n          title\r\n          description\r\n          tag\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","var React = require('react');\n\nfunction LeftArrow (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"id\":\"XMLID_6_\",\"d\":\"M165,0C74.019,0,0,74.019,0,165s74.019,165,165,165s165-74.019,165-165S255.981,0,165,0z M205.606,234.394\\r\\n\\tc5.858,5.857,5.858,15.355,0,21.213C202.678,258.535,198.839,260,195,260s-7.678-1.464-10.606-4.394l-80-79.998\\r\\n\\tc-2.813-2.813-4.394-6.628-4.394-10.606c0-3.978,1.58-7.794,4.394-10.607l80-80.002c5.857-5.858,15.355-5.858,21.213,0\\r\\n\\tc5.858,5.857,5.858,15.355,0,21.213l-69.393,69.396L205.606,234.394z\",\"key\":0}),React.createElement(\"g\",{\"key\":1}),React.createElement(\"g\",{\"key\":2}),React.createElement(\"g\",{\"key\":3}),React.createElement(\"g\",{\"key\":4}),React.createElement(\"g\",{\"key\":5}),React.createElement(\"g\",{\"key\":6}),React.createElement(\"g\",{\"key\":7}),React.createElement(\"g\",{\"key\":8}),React.createElement(\"g\",{\"key\":9}),React.createElement(\"g\",{\"key\":10}),React.createElement(\"g\",{\"key\":11}),React.createElement(\"g\",{\"key\":12}),React.createElement(\"g\",{\"key\":13}),React.createElement(\"g\",{\"key\":14}),React.createElement(\"g\",{\"key\":15})]);\n}\n\nLeftArrow.defaultProps = {\"version\":\"1.1\",\"id\":\"Layer_1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 330 330\",\"style\":{\"enableBackground\":\"new 0 0 330 330\"},\"xmlSpace\":\"preserve\"};\n\nmodule.exports = LeftArrow;\n\nLeftArrow.default = LeftArrow;\n","var React = require('react');\n\nfunction RightArrow (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"id\":\"XMLID_2_\",\"d\":\"M165,0C74.019,0,0,74.019,0,165s74.019,165,165,165s165-74.019,165-165S255.981,0,165,0z M225.606,175.605\\r\\n\\tl-80,80.002C142.678,258.535,138.839,260,135,260s-7.678-1.464-10.606-4.394c-5.858-5.857-5.858-15.355,0-21.213l69.393-69.396\\r\\n\\tl-69.393-69.392c-5.858-5.857-5.858-15.355,0-21.213c5.857-5.858,15.355-5.858,21.213,0l80,79.998\\r\\n\\tc2.814,2.813,4.394,6.628,4.394,10.606C230,168.976,228.42,172.792,225.606,175.605z\",\"key\":0}),React.createElement(\"g\",{\"key\":1}),React.createElement(\"g\",{\"key\":2}),React.createElement(\"g\",{\"key\":3}),React.createElement(\"g\",{\"key\":4}),React.createElement(\"g\",{\"key\":5}),React.createElement(\"g\",{\"key\":6}),React.createElement(\"g\",{\"key\":7}),React.createElement(\"g\",{\"key\":8}),React.createElement(\"g\",{\"key\":9}),React.createElement(\"g\",{\"key\":10}),React.createElement(\"g\",{\"key\":11}),React.createElement(\"g\",{\"key\":12}),React.createElement(\"g\",{\"key\":13}),React.createElement(\"g\",{\"key\":14}),React.createElement(\"g\",{\"key\":15})]);\n}\n\nRightArrow.defaultProps = {\"version\":\"1.1\",\"id\":\"Layer_1\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 330 330\",\"style\":{\"enableBackground\":\"new 0 0 330 330\"},\"xmlSpace\":\"preserve\"};\n\nmodule.exports = RightArrow;\n\nRightArrow.default = RightArrow;\n"],"names":["Nav","props","navItem","className","to","data","allMarkdownRemark","group","nodes","useState","targetTagList","setTargetTagList","filteredNodes","setFilteredNodes","currentPage","setCurrentPage","check_tag","tag","indexOf","TagFilter","map","item","entireTagListIndex","key","onClick","tagIndex","push","splice","length","filter","node","frontmatter","_tag","includes","PageNavi","totalPostCount","totalPageCount","Math","ceil","pageIndexList","nearPageCount","startPageIndex","endPageIndex","viewingPage","pageIndex","leftArrowHide","rightArrowHide","PageNaviArrow","toMove","hide","Arrow","LeftArrow","RightArrow","Posts","viewingNodes","slice","emptyPost","postList","postListIndex","emoji","title","date","description","IndividualsTagList","individualsTagIndex","fields","slug","React","createElement","defaultProps","module","exports","default"],"sourceRoot":""}