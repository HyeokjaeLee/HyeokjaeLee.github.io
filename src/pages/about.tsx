/* eslint-disable react/prop-types */
import React, { useEffect } from "react";
import Gmail from "img/gmail.svg";
import Github from "img/github.svg";
import postProfile from "img/about-profile.jpg";
import Javascript from "img/javascript.svg";
import Typescript from "img/typescript.svg";
import HTML5 from "img/html5.svg";
import CSS3 from "img/css3.svg";
import Sass from "img/sass.svg";
import Gatsby from "img/gatsby.svg";
import VueJS from "img/vue.js.svg";
import NestJS from "img/nestjs.svg";
import NextJS from "img/next.js.svg";
import Electron from "img/electron.svg";
import Git from "img/git.svg";
import Express from "img/express.svg";
import GraphQL from "img/graphql.svg";
import Naver from "img/naver.svg";
import Chrome from "img/chrome.svg";
import Puppeteer from "img/puppeteer.svg";
import MongoDB from "img/mongodb.svg";
import SQLite from "img/sqlite.svg";
import Jest from "img/jest.svg";
import React_svg from "img/reactIcon.svg";
import { useContext } from "react";
import { PortfolioContext, ThemeContext } from "contexts/theme";
import * as style from "styles/pages/about.module.scss";

const EMPTY_ELEMENT = (props: any) => <></>;
interface ProjectInfo {
  stackList: any[];
  titleUnderInfoList: string[];
  description: string;
  linkInfoMap: Map<string, string>;
  additionalInfoList: string[];
}

function Stack({ logo, title }: { logo: any; title: string }) {
  const Logo = logo;
  return (
    <li className={style.stack}>
      <Logo />
      {title}
    </li>
  );
}

function Project({
  title,
  stackList,
  sideInfoList,
  description,
  linkList,
  infoList,
}: {
  title: string;
  stackList: any[];
  sideInfoList: string[];
  description: string;
  linkList: { title: string; url: string }[];
  infoList: string[];
}) {
  const StackElements = stackList.map((Stack) => <Stack />);
  const SideInfoElements = sideInfoList.map((info) => <li>{info}</li>);
  const LinkElements = linkList.map(({ title, url }) => (
    <li>
      <span>{title}</span>
      <a href={url} target="_blank">
        {url}
      </a>
    </li>
  ));
  const InfoElements = infoList.map((info) => <li>{info}</li>);
  return (
    <section className={`${style.devidedSection} ${style.sectionMargin}`}>
      <div className={style.sectionTitle}>
        <h3>{title}</h3>
        <div className={style.stackWrap}>{StackElements}</div>
        <ul className={style.titleUnderInfoList}>{SideInfoElements}</ul>
      </div>
      <div className={style.sectionDescription}>
        <h4>{description}</h4>
        <ul className={style.projectLinkList}>{LinkElements}</ul>
        <ul>{InfoElements}</ul>
      </div>
    </section>
  );
}

export default function About({ location }: any) {
  const { search }: { search: string } = location;
  const { setPortfolioOptions } = useContext(PortfolioContext);
  const { theme } = useContext(ThemeContext);
  const isPortfolio = search.includes("portfolio");
  const showOnlyPortfolio = (element: JSX.Element) => (isPortfolio ? element : <></>);
  useEffect(() => {
    isPortfolio && setPortfolioOptions({ isPortfolio: true, portfolioButtonShow: false });
  }, []);
  let ProjectListElement = EMPTY_ELEMENT;
  let WorkExperienceElement = EMPTY_ELEMENT;
  const OnlyPortfolioElement = isPortfolio
    ? ({ children }: { children: JSX.Element }) => children
    : () => <></>;
  if (isPortfolio) {
    ProjectListElement = () => {
      const ProjectElements: JSX.Element[] = [];
      const projectInfoMap: Map<string, ProjectInfo> = new Map([
        [
          "Gititle",
          {
            stackList: [VueJS, Sass, Javascript],
            titleUnderInfoList: ["ÌåÄÍµ¨ÏÑ± - Í∞úÏù∏"],
            description: "ÏßÅÍ¥ÄÏ†ÅÏù¥Í≥† Ï†ïÌòïÌôîÎêú Git Commit message ÏûëÏÑ± ÎèÑÏö∞ÎØ∏",
            linkInfoMap: new Map([
              ["Github Repository", "https://github.com/HyeokjaeLee/gititle"],
              ["ÌîÑÎ°úÏ†ùÌä∏ ÌõÑÍ∏∞", "https://hyeokjaelee.github.io/gititle-project"],
              ["Ïª§Î∞ã Ïª®Î≤§ÏÖò Ï†ïÎ¶¨", "https://hyeokjaelee.github.io/good-commit-message"],
            ]),
            additionalInfoList: [
              "Ïª§Î∞ãÏóê ÏÇ¨Ïö©Ìï† ÌÇ§ÏõåÎìú, Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞ Ï†ïÏùò",
              "PWAÎ•º ÏßÄÏõêÌïòÎäî ÌîÑÎ°†Ìä∏ÏóîÎìú ÎîîÏûêÏù∏/Í∞úÎ∞ú (Vue.js)",
              "Ìé∏Ïùò Í∏∞Îä• Í∞úÎ∞ú",
            ],
          },
        ],
        [
          "KNU LMS Scheduler",
          {
            stackList: [Javascript, Sass, VueJS],
            titleUnderInfoList: ["ÌåÄÍµ¨ÏÑ± - Í∞úÏù∏"],
            description: "Í≥µÏ£ºÎåÄÌïôÍµê ÎπÑÎåÄÎ©¥ Í∞ïÏùò ÏãúÏä§ÌÖú Ìé∏ÏùòÏÑ± Í∞úÏÑ† ÌîÑÎ°úÍ∑∏Îû®",
            linkInfoMap: new Map([
              ["Github Repository", "https://github.com/HyeokjaeLee/knu-lms-scheduler"],
              ["ÌîÑÎ°úÏ†ùÌä∏ ÌõÑÍ∏∞", "https://hyeokjaelee.github.io/knu-lms-scheduler"],
            ]),
            additionalInfoList: [
              "ÎπÑÎåÄÎ©¥ Í∞ïÏùò ÏãúÏä§ÌÖú Î°úÍ∑∏Ïù∏ ÌÅ¨Î°§Îü¨ Í∞úÎ∞ú",
              "ÌîÑÎ°†Ìä∏ÏóîÎìú ÎîîÏûêÏù∏/Í∞úÎ∞ú (React)",
              "ÌîÑÎ°úÍ∑∏Îû® ÌôçÎ≥¥, Î∞∞Ìè¨, ÌîºÎìúÎ∞± Î∞òÏòÅ ÏóÖÎç∞Ïù¥Ìä∏",
              "ÏóêÎ∏åÎ¶¨ÌÉÄÏûÑ 21ÎÖÑ ÌïòÎ∞òÍ∏∞ Best Í≤åÏãúÎ¨º ÏÑ†Ï†ï",
            ],
          },
        ],
        [
          "WEBTOON HUB",
          {
            stackList: [NestJS, MongoDB, React_svg, Sass, Typescript],
            titleUnderInfoList: ["ÌåÄÍµ¨ÏÑ± - Í∞úÏù∏", "Ï†ÄÏûëÍ∂å Îì±Î°ù (C-2021-020527)"],
            description: "Ïó¨Îü¨ ÌîåÎû´ÌèºÏùò ÏõπÌà∞ÏùÑ ÌïúÎ≤àÏóê Î≥º Ïàò ÏûàÎäî Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò",
            linkInfoMap: new Map([
              ["API Github Repository", "https://github.com/HyeokjaeLee/korea-webtoon-api"],
              ["Frontend Github Repository", "https://github.com/HyeokjaeLee/webtoon-hub"],
              ["API ÏóÖÎç∞Ïù¥Ìä∏ ÌõÑÍ∏∞", "https://hyeokjaelee.github.io/korea-webtoon-api-update"],
            ]),
            additionalInfoList: [
              "NestJS ÏÑúÎ≤Ñ Íµ¨Ï∂ï",
              "MongoDB Íµ¨Ï°∞ ÏÑ§Í≥Ñ / Ï†ÅÏö©",
              "ÏõπÌà∞ ÌîåÎû´ÌèºÎ≥Ñ ÌÅ¨Î°§Îü¨ Í∞úÎ∞ú",
              "ToyprojectÏö© API Í∞úÎ∞ú/Í≥µÍ∞ú (RESTful)",
              "ÌîÑÎ°†Ìä∏ÏóîÎìú ÎîîÏûêÏù∏/Í∞úÎ∞ú (React)",
            ],
          },
        ],
        [
          "COVID-19 Dashboard",
          {
            stackList: [Express, GraphQL, Typescript, HTML5, Sass, Javascript],
            titleUnderInfoList: ["ÌåÄÍµ¨ÏÑ± - Í∞úÏù∏"],
            description: "ÌïúÍµ≠Ïùò COVID-19 ÌòÑÌô©ÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÎäî Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò",
            linkInfoMap: new Map([
              ["API Github Repository", "https://github.com/HyeokjaeLee/korea-covid19-api"],
              ["Frontend Github Repository", "https://github.com/HyeokjaeLee/covid19-dashboard"],
              ["API ÏóÖÎç∞Ïù¥Ìä∏ ÌõÑÍ∏∞", "https://hyeokjaelee.github.io/covid-19-api-update"],
            ]),
            additionalInfoList: [
              "Express ÏÑúÎ≤Ñ Íµ¨Ï∂ï",
              "COVID-19 Îç∞Ïù¥ÌÑ∞ Ï†ïÌòïÌôî & Í≥ÑÏÇ∞ÏùÑ ÌÜµÌïú ÌôïÏû• Í∞í Ï∂îÍ∞Ä",
              "Í≥µÍ≥µÎç∞Ïù¥ÌÑ∞ Ìè¨ÌÑ∏Ïùò COVID-19 Îç∞Ïù¥ÌÑ∞ Ïù¥ÏÉÅÏπò Ï†úÍ±∞",
              "ToyprojectÏö© API Í∞úÎ∞ú/Í≥µÍ∞ú (GraphQL)",
              "ÌîÑÎ°†Ìä∏ÏóîÎìú ÎîîÏûêÏù∏/Í∞úÎ∞ú(Vanilla Javascript)",
            ],
          },
        ],
        [
          "Nagle`s Blog",
          {
            stackList: [Gatsby, GraphQL, Sass, Typescript],
            titleUnderInfoList: ["ÌåÄÍµ¨ÏÑ± - Í∞úÏù∏"],
            description: "Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ & Í∞úÏù∏ Î∏îÎ°úÍ∑∏",
            linkInfoMap: new Map([
              ["Github Repository", "https://github.com/HyeokjaeLee/hyeokjaelee.github.io"],
              ["Gatsby Î∏îÎ°úÍ∑∏ Ïù¥Ï†Ñ Ï§ëÍ∞ÑÎ¶¨Î∑∞", "https://hyeokjaelee.github.io/blog-remake-review1"],
              ["Gatsby Î∏îÎ°úÍ∑∏ Ïù¥Ï†Ñ Î¶¨Î∑∞", "https://hyeokjaelee.github.io/blog-remake-review2"],
            ]),
            additionalInfoList: [
              "ÌîÑÎ°†Ìä∏ÏóîÎìú Gatsby ÎîîÏûêÏù∏/Í∞úÎ∞ú (React)",
              "Î∏îÎ°úÍ∑∏ Í∏∞Îä• Íµ¨ÌòÑ",
              "Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ Í∏∞Îä• Íµ¨ÌòÑ",
            ],
          },
        ],
      ]);
      for (const [
        title,
        { stackList, titleUnderInfoList, description, linkInfoMap, additionalInfoList },
      ] of projectInfoMap) {
        const TitleUnderInfoElements = titleUnderInfoList.map((titleUnderInfo) => (
          <li>{titleUnderInfo}</li>
        ));
        const StackElements = stackList.map((Stack) => <Stack />);
        let LinkInfoElements: JSX.Element[] = [];
        for (const [name, url] of linkInfoMap)
          LinkInfoElements.push(
            <li>
              <span>{name}</span>
              <a href={url} target="_blank">
                {url}
              </a>
            </li>
          );
        let AdditionalElements: JSX.Element[] = [];
        for (const additionalInfo of additionalInfoList)
          AdditionalElements.push(<li>{additionalInfo}</li>);
        ProjectElements.push(
          <section className={`${style.devidedSection} ${style.sectionMargin}`}>
            <div className={style.sectionTitle}>
              <h3>{title}</h3>
              <section className={style.stackWrap}>{StackElements}</section>
              <ul className={style.titleUnderInfoList}>{TitleUnderInfoElements}</ul>
            </div>
            <div className={style.sectionDescription}>
              <h4>{description}</h4>
              <ul className={style.projectLinkList}>{LinkInfoElements}</ul>
              <ul>{AdditionalElements}</ul>
            </div>
          </section>
        );
      }
      return (
        <section>
          <h2>üîñ Projects</h2>
          {ProjectElements}
        </section>
      );
    };

    WorkExperienceElement = () => (
      <section>
        <h2>üë®üèª‚Äçüíª Work Experience</h2>
        <div className={`${style.devidedSection} ${style.sectionMargin}`}>
          <div className={style.sectionTitle}>
            <h3>Coupang Eats</h3>
            <ul className={style.titleUnderInfoList}>
              <li>EDP Operations</li>
              <li>
                2019.08 ~ 2020.02 <span className={style.miniTxt}>6Í∞úÏõî</span>
              </li>
            </ul>
          </div>
          <div className={style.sectionDescription}>
            <h4>2019ÎÖÑ 5ÏõîÎ∂ÄÌÑ∞ ÏÑúÎπÑÏä§ Ï§ëÏù∏ 30Î∂Ñ Î°úÏºì ÏùåÏãù Î∞∞Îã¨ ÏÑúÎπÑÏä§</h4>
            <ul>
              <li>
                Î∞∞Îã¨ÌååÌä∏ÎÑà Î∞∞Ï†ïÏ∑®ÏÜå Í∏∞Îä•Ïùò Í∞úÎ∞ú ÏßÄÌëúÍ∞Ä ÎêòÎäî Îç∞Ïù¥ÌÑ∞ ÏàòÏßë ÏÜîÎ£®ÏÖò Ï†úÏãú/Í∞úÎ∞ú
                <span className={style.miniTxt}>Îã¥Îãπ Ïù∏Ïõê 75% Ï†àÍ∞ê</span>
              </li>
              <li>ÏßÄÏó≠Î≥Ñ Î∞∞Îã¨ Ïó£ÏßÄ ÏºÄÏù¥Ïä§ Îî•Îã§Ïù¥Î∏å Í≥ºÏ†ïÏóê ÌïÑÏöîÌïú Îç∞Ïù¥ÌÑ∞ ÌÅ¥Î†åÏßï/ÏãúÍ∞ÅÌôî</li>
              <li>Í≥†Í∞ù Í≤ΩÌóò Worst case Î∞∞Îã¨ÌååÌä∏ÎÑà Í≥ÑÏ†ï Ï†ïÏßÄ ÏûêÎèôÌôî ÌîÑÎ°úÏÑ∏Ïä§ Í∞úÎ∞ú</li>
              <li>
                ÏóÖÎ¨¥Ïóê ÌïÑÏöîÌïú ÏûêÎèôÌôî Ïä§ÌÅ¨Î¶ΩÌä∏ & Îß§ÌÅ¨Î°ú Í∞úÎ∞ú
                <span className={style.miniTxt}>Îã¥Îãπ Ïù∏Ïõê Ìïú Î™Ö ÏàòÏ§ÄÏúºÎ°ú Ï†àÍ∞ê</span>
              </li>
              <li>Î∞∞Îã¨ÌååÌä∏ÎÑà ÏÑºÌÑ∞ Ï±óÎ¥á Í∞úÎ∞ú</li>
              <li>
                ÏãùÏÇ¨ÏãúÍ∞ÑÍ≥º ÏÑúÎπÑÏä§ ÌîºÌÅ¨ÌÉÄÏûÑÏù¥ Í≤πÏ≥ê ÏãùÏÇ¨ Ï§ë Î∞úÏÉùÌïòÎäî Ïù¥Ïäà Ìä∏ÎûòÌÇπÏùÑ ÏúÑÌï¥ ÎÖ∏Ìä∏Î∂ÅÏùÑ
                ÏÜåÏßÄÌï¥Ïïº ÌïòÎäî Î∂àÌé∏Ìï® Ìï¥ÏÜåÎ•º ÏúÑÌïú Î¥á Í∞úÎ∞ú
              </li>
            </ul>
          </div>
        </div>
      </section>
    );
  }
  return (
    <article className={theme === "dark" ? style.aboutDark : style.about}>
      <section>
        <h2>üí° About Me</h2>
        <div className={`${style.aboutMeContent} ${style.sectionMargin}`}>
          <img src={postProfile} className={style.profile} />
          <div>
            <h3>"Í∞úÎ∞úÏûêÎ•º ÍøàÍæ∏Îäî ÏΩîÎçî, Ïù¥ÌòÅÏû¨ÏûÖÎãàÎã§."</h3>
            <ul>
              <li>Full Stack Í∞úÎ∞úÏûêÎ•º ÏßÄÌñ•ÌïòÍ≥† ÏûàÏäµÎãàÎã§.</li>
              <li>Know-What, Know-WhereÏùÑ Ï§ëÏöîÌïòÍ≤å ÏÉùÍ∞ÅÌï©ÎãàÎã§.</li>
              <li>ÏùºÏÉÅÏóêÏÑú Ìï≠ÏÉÅ Îçî Ìé∏Î¶¨Ìïú Î∞©Î≤ïÏùÑ Í≥†ÎØºÌïòÍ≥† Ï∞æÏïÑÎÉÖÎãàÎã§.</li>
              <li>Ïó¨Îü¨ Ïñ∏Ïñ¥Îì§Ïóê Î∞úÎßå Îã¥Í∂àÎ≥¥ÎçòÏ§ë 2020ÎÖÑÏóê JavascriptÎ•º ÎßåÎÇò Ìëπ Îπ†Ï†∏ÏûàÏäµÎãàÎã§.</li>
              <li>
                Îπ†Î•¥Í≤å Î∞úÏ†ÑÌïòÎäî Javascript ÏÉùÌÉúÍ≥ÑÎ•º ÏÇ¨ÎûëÌïòÍ≥† ÏÉàÎ°úÏö¥ Í∏∞Ïà†ÏùÑ Î∞∞Ïö∞ÎäîÍ±∏ Ï¢ãÏïÑÌï©ÎãàÎã§.
              </li>
            </ul>
          </div>
        </div>
      </section>
      <section>
        <h2>‚úâÔ∏è Contact & Channel</h2>
        <ul className={`${style.contactChannelList} ${style.sectionMargin}`}>
          {((propsList) =>
            propsList.map((props) => {
              const { Icon, title, link, children } = props;
              return (
                <li>
                  <Icon />
                  <b>{title}</b>
                  <a href={link} target="_blank">
                    {children ? children : link}
                  </a>
                </li>
              );
            }))([
            {
              Icon: Gmail,
              title: "Email.",
              link: "mailto:leehyeokjae97@gmail.com",
              children: "leehyeokjae97@gmail.com",
            },
            {
              Icon: Github,
              title: "Github.",
              link: "https://github.com/HyeokjaeLee",
            },
            {
              Icon: Chrome,
              title: "Blog.",
              link: "https://hyeokjaelee.github.io",
            },
            {
              Icon: Naver,
              title: "Blog(2011~2015).",
              link: "https://blog.naver.com/leehyeokjae7",
            },
          ])}
        </ul>
      </section>
      <WorkExperienceElement />
      <section>
        <h2>üî® Languages & Tools Experience</h2>
        <ul className={`${style.toolList} ${style.sectionMargin}`}>
          {((stackList) =>
            stackList.map((stack) => {
              const title = stack[0];
              const Icon = stack[1];
              return (
                <li>
                  <Icon />
                  {title}
                </li>
              );
            }))([
            ["Javascript", Javascript],
            ["Typescript", Typescript],
            ["HTML5", HTML5],
            ["CSS3", CSS3],
            ["Sass", Sass],
            ["React", React_svg],
            ["NextJS", NextJS],
            ["Gatsby", Gatsby],
            ["VueJS", VueJS],
            ["Express", Express],
            ["NestJS", NestJS],
            ["GraphQL", GraphQL],
            ["MongoDB", MongoDB],
            ["SQLite", SQLite],
            ["Electron", Electron],
            ["Puppeteer", Puppeteer],
            ["Jest", Jest],
            ["Git", Git],
          ])}
        </ul>
      </section>
      <ProjectListElement />
      <OnlyPortfolioElement>
        <section>
          <h2>üéì Education</h2>
          <div className={`${style.sectionFlex} ${style.sectionMargin}`}>
            <h3>Í≥µÏ£ºÎåÄÌïôÍµê</h3>
            <div className={style.devidedSection}>
              <div className={style.sectionTitle}>
                <p>Ïª¥Ìì®ÌÑ∞ Í≥µÌïôÍ≥º</p>
                <p>2016.03 ~ Ï°∏ÏóÖÏòàÏ†ï</p>
              </div>
              <ul className={style.setionDescription}>
                <li>
                  <a
                    style={{ marginLeft: "0" }}
                    href="https://namu.wiki/w/%EA%B3%B5%EC%A3%BC%EB%8C%80%ED%95%99%EA%B5%90/%ED%95%99%EB%B6%80/%EA%B3%B5%EA%B3%BC%EB%8C%80%ED%95%99?rev=316#s-2.3.4"
                  >
                    PRIMITVE
                  </a>
                  Í∞úÎ∞ú & Ï∞ΩÏóÖ ÎèôÏïÑÎ¶¨ ÌôúÎèô
                </li>
                <li>Ï†ïÎ≥¥Ï≤òÎ¶¨Í∏∞ÏÇ¨ Ï∑®Îìù</li>
              </ul>
            </div>
          </div>
        </section>
      </OnlyPortfolioElement>
    </article>
  );
}
