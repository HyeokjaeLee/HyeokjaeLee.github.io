{"version":3,"file":"component---src-pages-about-index-tsx-83c6ab3ca3a95f41715f.js","mappings":"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","sources":["webpack://hyeokjaelee.github.io/./node_modules/.pnpm/camelcase@6.3.0/node_modules/camelcase/index.js","webpack://hyeokjaelee.github.io/../src/image-utils.ts","webpack://hyeokjaelee.github.io/../src/components/hooks.ts","webpack://hyeokjaelee.github.io/../src/components/layout-wrapper.tsx","webpack://hyeokjaelee.github.io/../src/components/picture.tsx","webpack://hyeokjaelee.github.io/../src/components/placeholder.tsx","webpack://hyeokjaelee.github.io/../src/components/main-image.tsx","webpack://hyeokjaelee.github.io/../src/components/gatsby-image.server.tsx","webpack://hyeokjaelee.github.io/../src/components/gatsby-image.browser.tsx","webpack://hyeokjaelee.github.io/../src/components/static-image.server.tsx","webpack://hyeokjaelee.github.io/../src/components/static-image.tsx","webpack://hyeokjaelee.github.io/./node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/phone.js","webpack://hyeokjaelee.github.io/./src/components/AboutNavigation.tsx","webpack://hyeokjaelee.github.io/./src/components/AboutHeader.tsx","webpack://hyeokjaelee.github.io/./node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/link-2.js","webpack://hyeokjaelee.github.io/./src/components/AboutItem.tsx","webpack://hyeokjaelee.github.io/./src/components/ProjectContainer.tsx","webpack://hyeokjaelee.github.io/./src/components/CodestatesWorkExperience.tsx","webpack://hyeokjaelee.github.io/./src/components/CoupangWorkExperience.tsx","webpack://hyeokjaelee.github.io/./src/components/SideProjectSection.tsx","webpack://hyeokjaelee.github.io/./src/pages/about/index.tsx"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Phone = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"\n  }));\n});\nPhone.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPhone.displayName = 'Phone';\nexport default Phone;","import React from 'react';\n\nimport { PostArticleNavigation } from './PostArticleNavigation';\n\nexport enum ABOUT_TITLE_ID {\n  ABOUT_ME = 'about-me',\n  WORK_EXPERIENCE = 'work-experience',\n  CODESTATES = 'codestates',\n  EMPLOY_PLATFORM = 'employ-platform',\n  PAYMENT_SYSTEM = 'payment-system',\n  COUPANG = 'coupang',\n  EDP_CHAT_BOT = 'edp-chat-bot',\n  DATA_COLLECT = 'data-collect',\n  WORK_AUTOMATION = 'work-automation',\n  REVIEW = 'review',\n  SIDE_PROJECT = 'side-project',\n  BRIEND = 'briend',\n  PASTIME_UI = 'pastime-ui',\n  KOREA_WEBTOON_API = 'korea-webtoon-api',\n  WEBTOON_HUB = 'webtoon-hub',\n  KNU = 'knu',\n  GITITLE = 'gititle',\n  BLOG = 'blog',\n  CODE_CONVENTION = 'code-convention',\n  KOREA_COVID_19_API = 'korea-covid-19-api',\n  KOREA_COVID_19_DASHBOARD = 'korea-covid-19-dashboard',\n  ETC = 'etc',\n  EDU = 'edu',\n}\n\nexport const AboutNavigation = () => (\n  <PostArticleNavigation\n    headings={[\n      {\n        value: 'About me',\n        id: ABOUT_TITLE_ID.ABOUT_ME,\n        depth: 1,\n      },\n      {\n        value: 'Work experience',\n        id: ABOUT_TITLE_ID.WORK_EXPERIENCE,\n        depth: 1,\n      },\n      {\n        value: 'CodeStates',\n        id: ABOUT_TITLE_ID.CODESTATES,\n        depth: 2,\n      },\n      {\n        value: '채용 플랫폼 개발',\n        id: ABOUT_TITLE_ID.EMPLOY_PLATFORM,\n        depth: 3,\n      },\n      {\n        value: '후불 결제 시스템 개발',\n        id: ABOUT_TITLE_ID.PAYMENT_SYSTEM,\n        depth: 3,\n      },\n      {\n        value: 'Coupang',\n        id: ABOUT_TITLE_ID.COUPANG,\n        depth: 2,\n      },\n      {\n        value: '카카오톡 챗봇 개발',\n        id: ABOUT_TITLE_ID.EDP_CHAT_BOT,\n        depth: 3,\n      },\n      {\n        value: '데이터 수집 / 클렌징 / 시각화',\n        id: ABOUT_TITLE_ID.DATA_COLLECT,\n        depth: 3,\n      },\n      {\n        value: '업무 자동화',\n        id: ABOUT_TITLE_ID.WORK_AUTOMATION,\n        depth: 3,\n      },\n      {\n        value: '이런 평가를 받았어요',\n        id: ABOUT_TITLE_ID.REVIEW,\n        depth: 3,\n      },\n      {\n        value: 'Side project',\n        id: ABOUT_TITLE_ID.SIDE_PROJECT,\n        depth: 1,\n      },\n      {\n        value: '실시간 번역 채팅앱 - Briend',\n        id: ABOUT_TITLE_ID.BRIEND,\n        depth: 2,\n      },\n      {\n        value: '리액트 컴포넌트 라이브러리 - Pastime UI',\n        id: ABOUT_TITLE_ID.PASTIME_UI,\n        depth: 2,\n      },\n      {\n        value: '비공식 한국 웹툰 API - Korea webtoon API',\n        id: ABOUT_TITLE_ID.KOREA_WEBTOON_API,\n        depth: 2,\n      },\n      {\n        value: '웹툰 종합 플랫폼 - Webtoon hub',\n        id: ABOUT_TITLE_ID.WEBTOON_HUB,\n        depth: 2,\n      },\n      {\n        value:\n          '공주대학교 온라인 강의 시스템 편의성 향상 프로그램 - KNU LMS scheduler',\n        id: ABOUT_TITLE_ID.KNU,\n        depth: 2,\n      },\n      {\n        value: 'Emoji를 활용하는 git 커밋메시지 에디터 - Gititle',\n        id: ABOUT_TITLE_ID.GITITLE,\n        depth: 2,\n      },\n      {\n        value: '개인 블로그 - hyeokjaelee.github.io',\n        id: ABOUT_TITLE_ID.BLOG,\n        depth: 2,\n      },\n      {\n        value: '코드 컨벤션 라이브러리 - Code convetion packages',\n        id: ABOUT_TITLE_ID.CODE_CONVENTION,\n        depth: 2,\n      },\n      {\n        value: '비공식 한국 COVID-19 API - Korea COVID-19 API',\n        id: ABOUT_TITLE_ID.KOREA_COVID_19_API,\n        depth: 2,\n      },\n      {\n        value: '한국 COVID-19 Dashboard - COVID-19 dashboard',\n        id: ABOUT_TITLE_ID.KOREA_COVID_19_DASHBOARD,\n        depth: 2,\n      },\n      {\n        value: 'Etc',\n        id: ABOUT_TITLE_ID.ETC,\n        depth: 1,\n      },\n      {\n        value: 'Education',\n        id: ABOUT_TITLE_ID.EDU,\n        depth: 1,\n      },\n    ]}\n    title=\"Portfolio\"\n  />\n);\n","import { StaticImage } from 'gatsby-plugin-image';\n\nimport React from 'react';\nimport { Mail, Phone } from 'react-feather';\n\nimport { ABOUT_TITLE_ID } from './AboutNavigation';\n\nexport const AboutHeader = () => (\n  <header className=\"flex flex-col gap-12\" id={ABOUT_TITLE_ID.ABOUT_ME}>\n    <section className=\"flex gap-9 items-center flex-wrap\">\n      <StaticImage\n        src=\"../images/profile.jpeg\"\n        alt=\"profile\"\n        className=\"w-32 h-32 rounded-full\"\n      />\n      <dl>\n        <dt className=\"flex items-center gap-2 text-sm\">\n          <Mail className=\"w-4 h-4\" />\n          email\n        </dt>\n        <dd className=\"mb-2\">\n          <a href=\"mailto:leehyeokjae97@gmail.com\" className=\"hover:underline\">\n            leehyeokjae97@gmail.com\n          </a>\n        </dd>\n        <dt className=\"flex items-center gap-2 text-sm\">\n          <Phone className=\"w-4 h-4\" />\n          phone\n        </dt>\n        <dd>+821093906067</dd>\n      </dl>\n    </section>\n    <h1 className=\"text-lg text-center\">\n      👋 안녕하세요!\n      <br />\n      덕업일치 개발자, <span className=\"font-bold\">이혁재</span>\n      입니다.\n    </h1>\n    <ul className=\"list-disc ml-2\">\n      <li>일상에서 항상 더 편리한 방법을 고민하고 찾아낼 수 있어요.</li>\n      <li>\n        개발하면서 특정 도구를 어떻게 사용하는가(KNOW-HOW)보다\n        <br />\n        어떤 도구(KNOW-WHAT)가 있고 어디서(KNOW-WHERE) 찾을 수 있는가를 중요하게\n        생각해요.\n      </li>\n      <li>\n        빠르게 발전하는 Javascript 생태계를 사랑하고 새로운 기술을 학습하는 것에\n        즐거움을 느껴요.\n      </li>\n      <li>\n        단순히 주어진 요구사항을 구현하는 것이 아닌, 제품의 비즈니스적인 설계 및\n        기획에도 관심이 많아요.\n      </li>\n    </ul>\n  </header>\n);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Link2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nLink2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nLink2.displayName = 'Link2';\nexport default Link2;","import React from 'react';\nimport { Calendar, Link2 } from 'react-feather';\n\ninterface StackProps {\n  name: string;\n  logo?: string;\n  backgroundColor: string;\n  blackLogo?: boolean;\n}\n\ninterface LinkProps {\n  name: string;\n  href: string;\n  type?: 'github' | 'blog' | 'storybook' | 'product';\n}\n\ninterface ProjectItemProps {\n  title: string;\n  summaries?: string[];\n  stacks?: StackProps[];\n  links?: LinkProps[];\n  experiences?: string[];\n  period?: string;\n  id?: string;\n}\n\nexport const AboutItem = ({\n  title,\n  summaries,\n  stacks,\n  experiences,\n  links,\n  period,\n  id,\n}: ProjectItemProps) => (\n  <li className=\"mb-7\">\n    <h4 className=\"text-xl mb-3 flex items-center gap-2 flex-wrap\" id={id}>\n      {title}{' '}\n      {period ? (\n        <small className=\"flex items-center text-sm gap-1 font-semibold text-zinc-400\">\n          <Calendar className=\"w-4 h-4\" />\n          {period}\n        </small>\n      ) : null}\n    </h4>\n    {stacks ? (\n      <ul className=\"flex gap-1 mb-5 flex-wrap\">\n        {stacks.map(({ name, backgroundColor, blackLogo, logo }) => (\n          <li key={name}>\n            <img\n              src={`https://img.shields.io/badge/${name}-${backgroundColor.replace(\n                '#',\n                '',\n              )}?style=flat-square&logo=${logo ?? name}&logoColor=${\n                blackLogo ? 'black' : 'white'\n              }`}\n              alt={name}\n              loading=\"lazy\"\n            />\n          </li>\n        ))}\n      </ul>\n    ) : null}\n    {summaries ? (\n      <ul className=\"text-sm list-disc ml-4\">\n        {summaries.map((summary, index) => (\n          <li key={index} className=\"mb-1\">\n            {summary}\n          </li>\n        ))}\n      </ul>\n    ) : null}\n    {experiences ? (\n      <ul className=\"text-sm my-6\">\n        {experiences.map((experience, index) => (\n          <li className=\"mb-2\" key={index}>\n            {experience}\n          </li>\n        ))}\n      </ul>\n    ) : null}\n\n    {links ? (\n      <blockquote className=\"border-l-4 border-gray-500 pl-3 text-xs\">\n        <h5 className=\"mb-1 flex gap-1 items-center font-bold\">\n          <Link2 className=\"w-3 h-3\" />\n          관련 링크\n        </h5>\n        <ul className=\"list-decimal ml-4\">\n          {links.map(({ name, href, type = 'blog' }) => (\n            <li key={name}>\n              <a\n                href={href}\n                target=\"_blank\"\n                className=\"text-blue-500 hover:underline\"\n                rel=\"noreferrer\"\n              >\n                {name} (\n                {\n                  {\n                    github: 'Github repo',\n                    blog: 'Blog post',\n                    storybook: 'Storybook',\n                    product: 'Product',\n                  }[type]\n                }\n                )\n              </a>\n            </li>\n          ))}\n        </ul>\n      </blockquote>\n    ) : null}\n  </li>\n);\n","import React from 'react';\nimport { Calendar } from 'react-feather';\n\nimport { useGlobalStore } from '@stores/useGlobalStore';\n\ninterface ProjectContainerProps {\n  title: string;\n  period?: string;\n  children: React.ReactNode;\n  jobTitle: string;\n  id?: string;\n}\n\nexport const ProjectContainer = ({\n  title,\n  period,\n  children,\n  jobTitle,\n  id,\n}: ProjectContainerProps) => {\n  const helloTarget = useGlobalStore((state) => state.helloTarget);\n  return (\n    <>\n      <dt className=\"mb-4\">\n        <h3 className=\"font-bold text-2xl flex items-center\" id={id}>\n          {title}\n          {period && helloTarget ? (\n            <div className=\"text-zinc-400 text-base flex gap-1 items-center ml-2\">\n              <Calendar className=\"w-4 h-4\" />\n              <span>{period}</span>\n            </div>\n          ) : null}\n        </h3>\n        <p className=\"text-sm ml-1\">{jobTitle}</p>\n      </dt>\n      <dd className=\"mb-4\">{children}</dd>\n    </>\n  );\n};\n","import React from 'react';\n\nimport { AboutItem } from './AboutItem';\nimport { ABOUT_TITLE_ID } from './AboutNavigation';\nimport { ProjectContainer } from './ProjectContainer';\n\nexport const CodestatesWorkExperience = () => (\n  <ProjectContainer\n    title=\"Codestates\"\n    period=\"2022.02 - 2023.08\"\n    jobTitle=\"Frontend engineer\"\n    id={ABOUT_TITLE_ID.CODESTATES}\n  >\n    <ul>\n      <AboutItem\n        title=\"채용 플랫폼 개발\"\n        id={ABOUT_TITLE_ID.EMPLOY_PLATFORM}\n        summaries={[\n          '채용 플랫폼 디자인시스템 개발',\n          '외부 렌더링을 발생시키지 않는 유효성 검사 라이브러리 개발',\n          '채용 플랫폼 B2B, B2C, 어드민 클라이언트 개발',\n          '채용 플랫폼 MVP 유저 마이그레이션 프로세스 개발',\n          '리액트 쿼리 기반 커스텀 훅 라이브러리 개발',\n        ]}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'Next.js',\n            backgroundColor: '#000000',\n          },\n          {\n            name: 'Swagger',\n            backgroundColor: '#85EA2D',\n            blackLogo: true,\n          },\n          {\n            name: 'Zustand',\n            logo: 'React',\n            backgroundColor: '#423E39',\n          },\n          {\n            name: 'ReactQuery',\n            backgroundColor: '#FF4154',\n          },\n          {\n            name: 'Storybook',\n            backgroundColor: '#FF4785',\n          },\n          {\n            name: 'SCSS',\n            logo: 'Sass',\n            backgroundColor: '#CD6799',\n          },\n          {\n            name: 'CSS Modules',\n            logo: 'CSSModules',\n            backgroundColor: '#000000',\n          },\n          {\n            name: 'Vite',\n            backgroundColor: '#646CFF',\n          },\n        ]}\n        experiences={[\n          '채용 플랫폼 개발팀에 첫 번째 프론트엔드 개발자로 합류해 비즈니스 설계, 기획, 개발자 채용 등 전반적인 업무에 참여했어요.',\n          '개발 편의성 및 유지보수성을 고려해 Swagger API 문서를 기반으로 자동화된 CI/CD 파이프라인을 구축하고, PNPM 기반 모노레포 구조를 도입했어요.',\n          '비즈니스 요구사항에 맞춰 제품 개발에 필요한 도구들을 선정하고 적용했어요.',\n          'React Form의 코드 형식에 불편함을 느껴 유효성 검사 라이브러리를 개발했어요.',\n          '이전 팀에서의 경험을 바탕으로 제품 개발 패턴을 설정하고 디자인 시스템을 구축했어요.',\n          '사용자 환경에서 액션이나 오류를 트래킹 할 수 있는 도구들을 검토하고 적용했어요.',\n        ]}\n        links={[\n          {\n            name: 'codeship-platform-app-library',\n            href: 'https://github.com/HyeokjaeLee/codeship-platform-app-library',\n            type: 'github',\n          },\n          {\n            name: 'Codeship platform app library',\n            href: 'https://codestates-engineering.github.io/codeship-platform-app-library',\n            type: 'storybook',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"후불 결제 시스템 개발\"\n        id={ABOUT_TITLE_ID.PAYMENT_SYSTEM}\n        summaries={[\n          '금융 사업부 디자인시스템 개발',\n          '후불 결제 시스템 클라이언트 레거시 개발환경 최신 개발 스택으로 마이그레이션 및 리펙토링',\n          '후불 결제 시스템 어드민, B2C, B2B 클라이언트 개발',\n        ]}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'React',\n            backgroundColor: '#61DAFB',\n            blackLogo: true,\n          },\n          {\n            name: 'GraphQL',\n            backgroundColor: '#E10098',\n          },\n          {\n            name: 'Apollo',\n            logo: 'ApolloGraphQL',\n            backgroundColor: '#311C87',\n          },\n          {\n            name: 'MobX',\n            backgroundColor: '#FF9955',\n          },\n          {\n            name: 'Storybook',\n            backgroundColor: '#FF4785',\n          },\n          {\n            name: 'StyledComponents',\n            logo: 'styled-components',\n            backgroundColor: '#DB7093',\n          },\n          {\n            name: 'Rollup.js',\n            backgroundColor: '#EC4A3F',\n          },\n        ]}\n        links={[\n          {\n            name: '리액트 컴포넌트, 어떤 컨셉으로 개발할까?',\n            href: '/react-component-concept',\n          },\n          {\n            name: 'Atomic Design Pattern 적용기',\n            href: '/react-atomic',\n          },\n          {\n            name: 'React 기반 제품을 개발할 때 고려해 볼 만한 디자인 패턴',\n            href: '/react-design-pattern',\n          },\n          {\n            name: '리액트 컴포넌트 스타일링 정리',\n            href: '/components-styling',\n          },\n        ]}\n        experiences={[\n          '기존 환경에서 불필요하거나 중단된 도구를 적극적으로 찾아내 제거하고 개선했어요.',\n          'GraphQL을 장점을 이해하고 API 스키마 설계 과정에 참여해 개발단계에서의 소통비용을 줄였어요.',\n          '팀 내 여러 직군들과 효율적으로 소통하는 방법을 고민하고 실천했어요.',\n          '컴포넌트 개발 컨셉을 설정하고 개발 패턴과 디자인 시스템을 도입했어요.',\n        ]}\n      />\n    </ul>\n  </ProjectContainer>\n);\n","import React from 'react';\n\nimport { Accordion } from '@hyeokjaelee/pastime-ui';\n\nimport { AboutItem } from './AboutItem';\nimport { ABOUT_TITLE_ID } from './AboutNavigation';\nimport { ProjectContainer } from './ProjectContainer';\n\nexport const CoupangWorkExperience = () => (\n  <ProjectContainer\n    title=\"Coupang\"\n    period=\"2019.08 - 2020.03\"\n    jobTitle=\"Eats Operator\"\n    id={ABOUT_TITLE_ID.COUPANG}\n  >\n    <ul>\n      <AboutItem\n        id={ABOUT_TITLE_ID.EDP_CHAT_BOT}\n        title=\"카카오톡 챗봇 개발\"\n        summaries={['배달파트너 센터 챗봇 개발']}\n        stacks={[\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n        ]}\n        experiences={[\n          '사용자 입장에서 액션을 예측하고 최적화할 수 있어요.',\n          '조직에서 제안한 환경 내에서 최선의 결과를 도출할 방법을 고민하고 적용했어요.',\n        ]}\n      />\n      <AboutItem\n        title=\"데이터 수집 / 클렌징 / 시각화\"\n        id={ABOUT_TITLE_ID.DATA_COLLECT}\n        summaries={[\n          '배달파트너 배정취소 기능 개발 지표 데이터 수집 솔루션 제시 / 개발',\n          '지역별 배달 엣지 케이스 딥다이브 과정에 필요한 데이터 클렌징 / 시각화',\n        ]}\n        stacks={[\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n          {\n            name: 'Python',\n            backgroundColor: '#3776AB',\n          },\n          {\n            name: 'Kibana',\n            backgroundColor: '#005571',\n          },\n          {\n            name: 'Google Sheets',\n            backgroundColor: '#0F9D58',\n          },\n        ]}\n        experiences={[\n          '요구사항을 충족하는 기능이 개발되기 위해 필요한 데이터들을 미리 예측하고  수집, 정제할 수 있어요.',\n          '데이터를 수집하고 정제하는 과정을 자동화해 담당 인원을 75% 절감했어요.',\n          '수집한 데이터들을 비개발자도 이용할 수 있게 배포하고 대쉬보드를 만들었어요.',\n        ]}\n      />\n      <AboutItem\n        title=\"업무 자동화\"\n        id={ABOUT_TITLE_ID.WORK_AUTOMATION}\n        summaries={[\n          '고객 경험 Worst case 배달파트너 계정 정지 자동화 프로세스 개발',\n          '업무에 필요한 자동화 스크립트 & 매크로 개발',\n          '식사시간과 서비스 피크타임이 겹쳐 식사 중 발생하는 트래킹 이슈를 해결하기 위한 봇 개발',\n        ]}\n        stacks={[\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n          {\n            name: 'Python',\n            backgroundColor: '#3776AB',\n          },\n          {\n            name: 'Google Sheets',\n            backgroundColor: '#0F9D58',\n          },\n        ]}\n        experiences={[\n          '반복적으로 수행했거나 해야 할 작업에 대해 고민하고 휴먼 에러 및 리소스를 줄일 수 있었어요.',\n          '정해진 업무 외에 내가 할 수 있는 일을 찾아내 조직에 기여할 수 있어요.',\n          '각 파트별 담당 업무를 자동화해 담당 인원을 한 명 수준으로 줄일 수 있었어요.',\n        ]}\n      />\n    </ul>\n    <h4 className=\"text-xl mb-3\" id={ABOUT_TITLE_ID.REVIEW}>\n      이런 평가를 받았어요\n    </h4>\n    <section>\n      <a\n        href=\"https://www.specter.co.kr/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-xs text-zinc-400 hover:underline\"\n      >\n        평판 조회 플랫폼 - Specter\n      </a>\n      <div className=\"flex gap-4 flex-wrap\">\n        <div>\n          <Accordion className=\"w-80\">\n            <Accordion.Title className=\"font-bold\">\n              💁‍♀️ Moon (Operator Manager)\n            </Accordion.Title>\n            <Accordion.Contents className=\"text-sm\">\n              <dl>\n                <dt className=\"text-base mt-4 mb-1 text-zinc-400\">강점</dt>\n                <dd className=\"flex flex-col gap-2\">\n                  <p>\n                    비즈니스 전반에 대한 관심을 가지고 업무에 참여하며,\n                    주도적으로 문제를 해결하기 위한 여러가지 방법을 제시합니다.\n                  </p>\n                  <p>\n                    넓은 기술적 지식을 가지고 있어 문제 해결을 위한 여러가지\n                    솔루션을 제시할 수 있습니다.\n                  </p>\n                  <p>데이터 가치를 파악하고 수집하는 역량이 뛰어납니다.</p>\n                </dd>\n                <dt className=\"text-base mt-4 mb-1 text-zinc-400\">\n                  개선해야할 점\n                </dt>\n                <dd className=\"flex flex-col gap-2\">\n                  <p>\n                    넓은 기술적 지식이 있지만, 깊이가 부족한 경우도 있습니다.\n                  </p>\n                  <p>\n                    집중력이 높아 업무에 몰입할 때 주변 동료들에게 담당하고 있던\n                    업무의 진행도 공유가 늦어지는 경우가 있습니다.\n                  </p>\n                </dd>\n              </dl>\n            </Accordion.Contents>\n          </Accordion>\n        </div>\n        <div>\n          <Accordion className=\"w-80\">\n            <Accordion.Title className=\"font-bold\">\n              💁‍♂️ Owen (Operator Manager)\n            </Accordion.Title>\n            <Accordion.Contents className=\"text-sm\">\n              <dl>\n                <dt className=\"text-base mt-4 mb-1 text-zinc-400\">강점</dt>\n                <dd className=\"flex flex-col gap-2\">\n                  <p>주어진 업무 롤 이상의 성과를 내던 동료였습니다.</p>\n                  <p>\n                    사업 초기 맴버로 합류하여 메뉴얼적인 업무가 주를 이루었을때\n                    업무를 간소화 하여 리드타임을 감소 시키고 스스로 문제를 찾아\n                    팀원들에게 공유하는 등, 문제를 해결하기 위해 프로세스를\n                    구축하고 자동화하여 조직에 기여하였습니다.\n                  </p>\n                  <p>\n                    AB 테스트를 통해 임팩트를 증명하여 기술적인 관점에서 빠른\n                    조직의 변화가 있었습니다.\n                  </p>\n                  <p>\n                    일회성 솔루션이 아닌 재사용 가능한 프로세스를 제시하고\n                    구현해 큰 규모의 트래픽을 감당할 수 있게 했습니다.\n                  </p>\n                  <p>\n                    이러한 근본적인 개선으로 조직에 유의미한 결과들을\n                    내주었습니다.\n                  </p>\n                  <p>\n                    팀 전반적인 업무와 나아가서 비즈니스 퀄리티를 개선하려는\n                    능동적인 자세를 갖추고 즉각적으로 퍼포먼스를 보일 수 있는\n                    동료였습니다.\n                  </p>\n                </dd>\n                <dt className=\"text-base mt-4 mb-1 text-zinc-400\">\n                  개선해야할 점\n                </dt>\n                <dd className=\"flex flex-col gap-2\">\n                  <p>\n                    이혁재님의 첫직장에서 함께 한 짧은 시간이였지만 더 많이 소통\n                    하지 못한 부분이 아쉽습니다.\n                  </p>\n                  <p>\n                    당시 업무분담이 잘못되어 있어 혁재님이 문제부터 지표관리\n                    까지 전부 책임 지고 있었습니다.\n                  </p>\n                  <p>\n                    과도한 업무량이 본인에게 몰려 있다면 잡 레벨에 관계 없이\n                    건설적인 대립도 필요하다고 생각합니다.\n                  </p>\n                </dd>\n              </dl>\n            </Accordion.Contents>\n          </Accordion>\n        </div>\n      </div>\n    </section>\n  </ProjectContainer>\n);\n","import React from 'react';\n\nimport { AboutItem } from './AboutItem';\nimport { ABOUT_TITLE_ID } from './AboutNavigation';\n\nexport const SideProjectSection = () => (\n  <section>\n    <h2 className=\"font-bold text-3xl\" id={ABOUT_TITLE_ID.SIDE_PROJECT}>\n      🪀 Side Project\n    </h2>\n    <p className=\"text-sm mb-6 ml-1 font-bold text-zinc-400\">1인 개발</p>\n    <ul>\n      <AboutItem\n        title=\"실시간 번역 채팅앱 - Briend\"\n        id={ABOUT_TITLE_ID.BRIEND}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'Next.js',\n            backgroundColor: '#000000',\n          },\n          {\n            name: 'Zustand',\n            logo: 'React',\n            backgroundColor: '#423E39',\n          },\n          {\n            name: 'Pusher',\n            backgroundColor: '#300D4F',\n          },\n          {\n            name: 'Tailwind',\n            logo: 'TailwindCSS',\n            backgroundColor: '#06B6D4',\n          },\n          {\n            name: 'PWA',\n            backgroundColor: '#5A0FC8',\n          },\n        ]}\n        experiences={[\n          '유지 코스트를 줄이기 위해 Indexed DB를 이용해 정보를 저장하고 서버 및 외부 API 호출을 최소화할 수 있게 최대한 많은 로직을 클라이언트가 처리할 수 있도록 설계했어요.',\n          'UX를 고려해 최소한의 입력으로 기능을 사용할 수 있도록 구현했어요.',\n          'Next.js 13의 신기능들을 적극 활용해 Backend와 Frontend를 동시에 개발했어요.',\n          '이전에 개발한 React 컴포넌트 라이브러리를 활용해 개발 속도를 높였어요.',\n        ]}\n        links={[\n          {\n            name: 'Briend 번역 채팅앱 개발',\n            href: '/briend',\n          },\n          {\n            name: 'briend',\n            href: 'https://github.com/HyeokjaeLee/briend',\n            type: 'github',\n          },\n          {\n            name: '언어의 장벽없는 새로운 사람과의 대화 - Briend',\n            href: 'https://briend.vercel.app',\n            type: 'product',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"리액트 컴포넌트 라이브러리 - Pastime UI\"\n        id={ABOUT_TITLE_ID.PASTIME_UI}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'React',\n            backgroundColor: '#61DAFB',\n            blackLogo: true,\n          },\n          {\n            name: 'Storybook',\n            backgroundColor: '#FF4785',\n          },\n          {\n            name: 'SCSS',\n            logo: 'Sass',\n            backgroundColor: '#CD6799',\n          },\n          {\n            name: 'CSS Modules',\n            logo: 'CSSModules',\n            backgroundColor: '#000000',\n          },\n          {\n            name: 'Vite',\n            backgroundColor: '#646CFF',\n          },\n        ]}\n        experiences={[\n          '사용자의 입력을 받는 컴포넌트들이 외부 상태를 업데이트시키지 않고 유효성 검사 기능을 자체적으로 제공할 수 있게 개발했어요.',\n          '대부분의 HTML Props를 지원하고 외부에서 커스텀할 수 있도록 설계했어요.',\n          'Javascript Object의 특징을 활용해 사용자의 입력을 받는 컴포넌트들이 외부 렌더링을 발생시키지 않도록 설계했어요.',\n          'Storybook을 이용해 영어와 한국어로 문서화 후 NPM에 배포했어요.',\n          '해당 라이브러리를 사용해 개인 프로젝트들을 개발하면서 재사용성과 유지보수성을 높였어요.',\n          'SCSS를 이용해 컴포넌트를 스타일링하고 공통 로직을 최대한 재활용하면서 번들 사이즈를 최소화했어요.',\n          'Github action을 통해 자동으로 배포하고 문서화할 수 있게 구성했어요.',\n        ]}\n        links={[\n          {\n            name: 'pastime-ui',\n            href: 'https://github.com/HyeokjaeLee/pastime-ui',\n            type: 'github',\n          },\n          {\n            name: 'Pastime UI',\n            href: 'https://hyeokjaelee.github.io/pastime-ui',\n            type: 'storybook',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"비공식 한국 웹툰 API - Korea webtoon API\"\n        id={ABOUT_TITLE_ID.KOREA_WEBTOON_API}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'NestJS',\n            backgroundColor: '#E0234E',\n          },\n          {\n            name: 'MongoDB',\n            backgroundColor: '#47A248',\n          },\n        ]}\n        experiences={[\n          '여러 가지 웹툰 플랫폼을 크롤링한 데이터를 정형화하고 API로 제공해요.',\n          '배포 후 사용자들의 요구사항을 반영해 기능을 추가하고 유지보수 했어요.',\n        ]}\n        links={[\n          {\n            name: 'Webtoon API 개발',\n            href: '/korea-webtoon-api-update',\n          },\n          {\n            name: 'korea-webtoon-api',\n            href: 'https://github.com/HyeokjaeLee/korea-webtoon-api',\n            type: 'github',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"웹툰 종합 플랫폼 - Webtoon hub\"\n        id={ABOUT_TITLE_ID.WEBTOON_HUB}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'React',\n            backgroundColor: '#61DAFB',\n            blackLogo: true,\n          },\n          {\n            name: 'SCSS',\n            logo: 'Sass',\n            backgroundColor: '#CD6799',\n          },\n          {\n            name: 'Bootstrap',\n            backgroundColor: '#7952B3',\n          },\n          {\n            name: 'PWA',\n            backgroundColor: '#5A0FC8',\n          },\n        ]}\n        experiences={[\n          'Korea Webtoon API 활용 예시 프로젝트예요.',\n          '교내에서 프로그램 저작권 등록을 제안받고 등록했어요.',\n          '여러 가지 웹툰 정보에 대한 검색과 해당 웹툰 사이트로의 링크를 제공해요.',\n        ]}\n        links={[\n          {\n            name: 'webtoon-hub',\n            href: 'https://github.com/HyeokjaeLee/webtoon-hub',\n            type: 'github',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"공주대학교 온라인 강의 시스템 편의성 향상 프로그램 - KNU LMS scheduler\"\n        id={ABOUT_TITLE_ID.KNU}\n        stacks={[\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n          {\n            name: 'React',\n            backgroundColor: '#61DAFB',\n            blackLogo: true,\n          },\n          {\n            name: 'Electron',\n            backgroundColor: '#47848F',\n          },\n        ]}\n        experiences={[\n          '팬데믹으로 인해 온라인 강의가 활성화되면서 온라인 강의 시스템의 불편함을 느껴 개발했어요.',\n          '실시간으로 개인 강의 페이지들을 크롤링하고 출석, 과제, 시험 등의 마감 기한을 알려줘요.',\n          'Electron을 활용해 데스크탑 앱으로 만들어 대학생 커뮤니티에 공유하고 좋은 평가를 받았어요.',\n          '내가 만든 프로그램이 많은 사람들에게 도움이 되었을 때 뿌듯함을 느꼈어요.',\n        ]}\n        links={[\n          {\n            name: 'KNU LMS Scheduler 프로젝트',\n            href: '/knu-lms-scheduler',\n          },\n          {\n            name: 'knu-lms-scheduler',\n            href: 'https://github.com/HyeokjaeLee/knu-lms-scheduler',\n            type: 'github',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"Emoji를 활용하는 git 커밋메시지 에디터 - Gititle\"\n        id={ABOUT_TITLE_ID.GITITLE}\n        stacks={[\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n          {\n            name: 'Vue.js',\n            backgroundColor: '#4FC08D',\n          },\n          {\n            name: 'SCSS',\n            logo: 'Sass',\n            backgroundColor: '#CD6799',\n          },\n          {\n            name: 'PWA',\n            backgroundColor: '#5A0FC8',\n          },\n        ]}\n        experiences={[\n          '커밋 메시지에 이모지를 활용하고 정해진 규칙에 맞춰 작성하려고 개발했어요.',\n          'Node.js 환경을 사용하지 않고 개발했어요.',\n        ]}\n        links={[\n          {\n            name: 'Gititle 프로젝트',\n            href: '/gititle-project',\n          },\n          {\n            name: 'gititle',\n            href: 'https://github.com/HyeokjaeLee/gititle',\n            type: 'github',\n          },\n          {\n            name: 'Gititle',\n            href: 'https://hyeokjaelee.github.io/gititle',\n            type: 'product',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"개인 블로그 - hyeokjaelee.github.io\"\n        id={ABOUT_TITLE_ID.BLOG}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'Gatsby',\n            backgroundColor: '#663399',\n          },\n          {\n            name: 'GraphQL',\n            backgroundColor: '#E10098',\n          },\n          {\n            name: 'Tailwind',\n            logo: 'TailwindCSS',\n            backgroundColor: '#06B6D4',\n          },\n        ]}\n        experiences={[\n          '이전에 개발한 React 컴포넌트 라이브러리를 활용해 개발 속도를 높였어요.',\n          'Markdown을 활용해 글을 작성하고 Github action을 통해 자동으로 배포할 수 있게 구성했어요.',\n        ]}\n        links={[\n          {\n            name: 'Gatsby 블로그를 개발하면서',\n            href: '/blog-remake-review2',\n          },\n          {\n            name: 'Next.js 블로그를 떠나는 이유',\n            href: '/blog-remake-review1',\n          },\n          {\n            name: 'hyeokjaelee.github.io',\n            href: 'https://github.com/HyeokjaeLee/hyeokjaelee.github.io',\n            type: 'github',\n          },\n          {\n            name: '덕업일치 개발자',\n            href: 'https://hyeokjaelee.github.io',\n            type: 'product',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"코드 컨벤션 라이브러리 - Code convetion packages\"\n        id={ABOUT_TITLE_ID.CODE_CONVENTION}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n          {\n            name: 'React',\n            backgroundColor: '#61DAFB',\n            blackLogo: true,\n          },\n          {\n            name: 'Prettier',\n            backgroundColor: '#F7B93E',\n            blackLogo: true,\n          },\n          {\n            name: 'ESLint',\n            backgroundColor: '#4B32C3',\n          },\n          {\n            name: 'Stylelint',\n            backgroundColor: '#263238',\n          },\n        ]}\n        experiences={[\n          'PNPM을 통해 모노레포 구조로 설계해 각 린트 설정들을 독립적으로 설치하고 사용할 수 있게 했어요.',\n          '개인 프로젝트들에 적용해 가독성을 높였어요.',\n          'Github action을 통해 자동으로 NPM에 배포할 수 있게 구성했어요.',\n        ]}\n        links={[\n          {\n            name: 'code-convetion-packages',\n            href: 'https://github.com/HyeokjaeLee/code-convetion-packages',\n            type: 'github',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"비공식 한국 COVID-19 API - Korea COVID-19 API\"\n        id={ABOUT_TITLE_ID.KOREA_COVID_19_API}\n        stacks={[\n          {\n            name: 'TypeScript',\n            backgroundColor: '#3178C6',\n          },\n          {\n            name: 'Express',\n            backgroundColor: '#000000',\n          },\n          {\n            name: 'GraphQL',\n            backgroundColor: '#E10098',\n          },\n        ]}\n        experiences={[\n          '여러 API에 존재하는 COVID-19 관련 데이터를 정형화하고 API로 제공해요.',\n          'GraphQL의 편리함을 느껴 처음으로 GraphQL API를 개발했어요.',\n          '외부 API의 변경에 따라 유지보수 했어요.',\n        ]}\n        links={[\n          {\n            name: 'COVID-19 API 업데이트',\n            href: '/covid-19-api-update',\n          },\n          {\n            name: 'code-convetion-packages',\n            href: 'https://github.com/HyeokjaeLee/code-convetion-packages',\n            type: 'github',\n          },\n        ]}\n      />\n      <AboutItem\n        title=\"한국 COVID-19 Dashboard - COVID-19 dashboard\"\n        id={ABOUT_TITLE_ID.KOREA_COVID_19_DASHBOARD}\n        stacks={[\n          {\n            name: 'Javascript',\n            backgroundColor: '#F7DF1E',\n            blackLogo: true,\n          },\n          {\n            name: 'SCSS',\n            logo: 'Sass',\n            backgroundColor: '#CD6799',\n          },\n        ]}\n        experiences={[\n          '프레임워크 없이 개발했어요.',\n          'Javascript를 처음 학습하면서 개발했어요.',\n        ]}\n        links={[\n          {\n            name: 'covid19-dashboard',\n            href: 'https://github.com/HyeokjaeLee/covid19-dashboard',\n            type: 'github',\n          },\n        ]}\n      />\n    </ul>\n  </section>\n);\n","import React, { useEffect } from 'react';\n\nimport { AboutHeader } from '@components/AboutHeader';\nimport { AboutItem } from '@components/AboutItem';\nimport { ABOUT_TITLE_ID, AboutNavigation } from '@components/AboutNavigation';\nimport { Bio } from '@components/Bio';\nimport { CodestatesWorkExperience } from '@components/CodestatesWorkExperience';\nimport { CoupangWorkExperience } from '@components/CoupangWorkExperience';\nimport { Meta } from '@components/Meta';\nimport { SideProjectSection } from '@components/SideProjectSection';\nimport { useLocation } from '@reach/router';\nimport { useGlobalStore } from '@stores/useGlobalStore';\n\nexport const Head = () => {\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const portfolioTarget = searchParams.get('portfolio');\n  const portfolioPreview = searchParams.get('preview');\n\n  const isPortfolio = !!(portfolioTarget || portfolioPreview !== null);\n\n  return <Meta title={isPortfolio ? 'Portfolio' : 'About'} />;\n};\n\nconst About = () => {\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const portfolioTarget = searchParams.get('portfolio');\n  const portfolioPreview = searchParams.get('preview');\n\n  const isPortfolio = !!(portfolioTarget || portfolioPreview !== null);\n\n  const setHelloTarget = useGlobalStore((state) => state.setHelloTarget);\n\n  useEffect(() => {\n    if (portfolioTarget) return setHelloTarget(portfolioTarget);\n  }, [portfolioTarget, setHelloTarget]);\n\n  return (\n    <article className=\"leading-relaxed mt-8 md:mt-14 p-4 font-nanum-square break-keep flex\">\n      {isPortfolio ? <div className=\"flex-1 hidden lg:block\" /> : null}\n      <div className=\"max-w-3xl mx-auto flex flex-col gap-12\">\n        <AboutHeader />\n        {isPortfolio ? (\n          <>\n            <section>\n              <h2\n                className=\"font-bold text-3xl mb-6\"\n                id={ABOUT_TITLE_ID.WORK_EXPERIENCE}\n              >\n                👨‍💻 Work experience\n              </h2>\n              <dl className=\"mb-4\">\n                <CodestatesWorkExperience />\n                <CoupangWorkExperience />\n              </dl>\n            </section>\n            <SideProjectSection />\n            <section>\n              <h2 className=\"font-bold text-3xl mb-6\" id={ABOUT_TITLE_ID.ETC}>\n                🗃️ Etc\n              </h2>\n              <ul>\n                <AboutItem\n                  title=\"정보처리기사 자격증\"\n                  period=\"2021.06\"\n                  summaries={['정보처리기사 자격증 취득']}\n                />\n                <AboutItem\n                  title=\"프로그램 저작권 등록 - Webtoon Hub\"\n                  period=\"2021.02\"\n                  summaries={['등록번호: C-2021-020527']}\n                />\n                <AboutItem\n                  title=\"공주대학교 개발 창업 동아리 - Primitive\"\n                  period=\"2016.05\"\n                  summaries={[\n                    '재학 중: Android 개발 강의',\n                    '졸업 후: 취업 멘토링 활동',\n                  ]}\n                />\n              </ul>\n            </section>\n            <section>\n              <h2 className=\"font-bold text-3xl mb-6\" id={ABOUT_TITLE_ID.EDU}>\n                🎓 Education\n              </h2>\n              <ul>\n                <AboutItem\n                  title=\"공주대학교\"\n                  period=\"2016.04 - 2022.08\"\n                  summaries={['컴퓨터 공학 학사']}\n                />\n              </ul>\n            </section>\n          </>\n        ) : null}\n        <footer className=\"py-12 border-t\">\n          <Bio />\n        </footer>\n      </div>\n      {isPortfolio ? <AboutNavigation /> : null}\n    </article>\n  );\n};\n\nexport default About;\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","_extends","Object","assign","target","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Phone","forwardRef","_ref","_ref$color","color","_ref$size","size","rest","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ABOUT_TITLE_ID","AboutNavigation","React","PostArticleNavigation","headings","value","id","ABOUT_ME","depth","WORK_EXPERIENCE","CODESTATES","EMPLOY_PLATFORM","PAYMENT_SYSTEM","COUPANG","EDP_CHAT_BOT","DATA_COLLECT","WORK_AUTOMATION","REVIEW","SIDE_PROJECT","BRIEND","PASTIME_UI","KOREA_WEBTOON_API","WEBTOON_HUB","KNU","GITITLE","BLOG","CODE_CONVENTION","KOREA_COVID_19_API","KOREA_COVID_19_DASHBOARD","ETC","EDU","title","AboutHeader","StaticImage","require","Mail","href","Link2","x1","y1","x2","y2","AboutItem","summaries","stacks","experiences","links","period","Calendar","_ref2","name","blackLogo","logo","summary","index","experience","_ref3","rel","github","blog","storybook","product","ProjectContainer","jobTitle","helloTarget","useGlobalStore","state","CodestatesWorkExperience","CoupangWorkExperience","Accordion","Title","Contents","SideProjectSection","Head","search","useLocation","searchParams","URLSearchParams","portfolioTarget","get","portfolioPreview","isPortfolio","Meta","About","setHelloTarget","useEffect","Bio"],"sourceRoot":""}