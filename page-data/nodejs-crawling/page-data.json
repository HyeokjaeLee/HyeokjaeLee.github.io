{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/nodejs-crawling/","result":{"data":{"markdownRemark":{"id":"482be25c-443d-5e74-a05b-5a1bd503c7db","html":"<p class=\"my-4 whitespace-pre-wrap\">나는 보통 API를 만들거나 Tensorflow 학습에 사용하는 데이터를 수집하는데 크롤링을 이용한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">크롤링에 활용 가능한 도구는 언어별로 Jsoup(Java), BeautifulSoup(Python) 등 여러 종류가 있지만 이번 포스트에서는 내가 자주 사용하는 Javascript, Node.js 도구들을 이용해 <a href=\"http://openinsider.com/insider-purchases-25k\" class=\"text-blue-500 hover:underline\">OpenInsider</a>(해외 내부자 거래 정보 사이트)를 크롤링하는 과정을 간단하게 설명해보려한다.\n(언어마다 도구는 달라도 동작 방식은 대체로 비슷함)</p>\n<h2 id=\"크롤링crawling\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%ED%81%AC%EB%A1%A4%EB%A7%81crawling\" aria-label=\"크롤링crawling permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크롤링(Crawling)</h2>\n<p class=\"my-4 whitespace-pre-wrap\">크롤링은 웹 페이지에서 원하는 데이터를 추출해 내는 행위이다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">크롤링을 위해 개발된 소프트웨어를 크롤러(Crawler)라 한다.</p>\n<h2 id=\"도구-선택\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EB%8F%84%EA%B5%AC-%EC%84%A0%ED%83%9D\" aria-label=\"도구 선택 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도구 선택</h2>\n<p class=\"my-4 whitespace-pre-wrap\">Node.js에서도 크롤링에 사용할 수 있는 도구는 많고 그중에 용도에 맞게 선택하면 된다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">해당 페이지는 로그인도 필요 없고 따로 크롤링이 차단되어 있지도 않기 때문에 단순 http 라이브러리와 parsing 라이브러리만 사용해도 크롤링이 가능하다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">만약 특정 이유로 사람이 직접 데이터를 수집하는 것처럼 브라우저를 핸들링하는 방법으로 크롤링 해야 한다면 속도는 느리지만 Chromium을 제어하는 도구들(Puppeteer 등)을 사용하면 된다. (시간이 된다면 Puppeteer 사용방법도 다뤄볼 예정)</p>\n<h3 id=\"-nodejs-라이브러리\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#-nodejs-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC\" aria-label=\" nodejs 라이브러리 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📚 Node.js 라이브러리</h3>\n<h4 id=\"http-라이브러리-axios\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-xl\"><a href=\"#http-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-axios\" aria-label=\"http 라이브러리 axios permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 라이브러리: Axios</h4>\n<p class=\"my-4 whitespace-pre-wrap\">http 라이브러리에는 종류가 굉장히 많고 나는 평소 Request를 자주 사용해 왔는데 해당 라이브러리가 deprecated 되었다는 소식을 듣고 성능이 좋다는 Axios를 사용해 보기로함</p>\n<h4 id=\"parsing-라이브러리-cheerio\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-xl\"><a href=\"#parsing-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-cheerio\" aria-label=\"parsing 라이브러리 cheerio permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parsing 라이브러리: Cheerio</h4>\n<p class=\"my-4 whitespace-pre-wrap\">사실 parsing 라이브러리는 없어도 직접 파싱 해서 사용할 수 있지만 방대한 량의 html 코드를 파싱 하는 과정에서 코드가 복잡해지고 가독성도 떨어진다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">여기서는 jQuery 문법을 그대로 사용할 수 있는 Cheerio를 사용해서 파싱 하겠다.</p>\n<h2 id=\"개발환경-설정\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"개발환경 설정 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발환경 설정</h2>\n<h3 id=\"새-프로젝트-생성\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#%EC%83%88-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"새 프로젝트 생성 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새 프로젝트 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> <span class=\"token operator\">&lt;</span>프로젝트 이름<span class=\"token operator\">></span>\n$ <span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">&lt;</span>프로젝트 이름<span class=\"token operator\">></span>\n$ <span class=\"token function\">npm</span> init</code></pre></div>\n<h3 id=\"사용할-nodejs-모듈-설치\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%A0-nodejs-%EB%AA%A8%EB%93%88-%EC%84%A4%EC%B9%98\" aria-label=\"사용할 nodejs 모듈 설치 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용할 node.js 모듈 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> axios cheerio</code></pre></div>\n<h2 id=\"크롤링-맛보기\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%ED%81%AC%EB%A1%A4%EB%A7%81-%EB%A7%9B%EB%B3%B4%EA%B8%B0\" aria-label=\"크롤링 맛보기 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>크롤링 맛보기</h2>\n<p class=\"my-4 whitespace-pre-wrap\">이제 원하는 정보들의 위치를 찾아야 한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">원하는 정보를 오른쪽 마우스로 클릭후 검사를 사용하면 쉽게 찾을 수 있다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">거래 날짜와 해당 주식의 ticker 값을 받아오기 위한 selector를 복사해보자</p>\n<p class=\"my-4 whitespace-pre-wrap\"><img src=\"https://user-images.githubusercontent.com/71566740/131478329-82d599e6-56fa-44df-b80a-e609896315f8.png\" alt=\"test\" class=\"max-w-full rounded-sm my-12 mx-auto\"></p>\n<p class=\"my-4 whitespace-pre-wrap\">첫번째 값을 기준으로 각 정보의 slector는 다음과 같은걸 확인 할 수 있다.</p>\n<p class=\"my-4 whitespace-pre-wrap\"><strong>거래날짜</strong>: <code class=\"language-text\">#tablewrapper > table > tbody > tr:nth-child(1) > td:nth-child(3) > div</code></p>\n<p class=\"my-4 whitespace-pre-wrap\"><strong>ticker</strong>: <code class=\"language-text\">#tablewrapper > table > tbody > tr:nth-child(1) > td:nth-child(4) > b > a</code></p>\n<p class=\"my-4 whitespace-pre-wrap\">이 구조를 보면 한 가지 거래 정보는 같은 tr태그에 포함되어 있다는 걸 알 수 있다.</p>\n<h3 id=\"indexjs\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#indexjs\" aria-label=\"indexjs permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>index.js</h3>\n<p class=\"my-4 whitespace-pre-wrap\">생성한 프로젝트에 index.js 파일을 만들고 코드를 작성한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">여러 가지 방법이 있겠지만 나는 map 메서드를 이용해 모든 tr태그들의 거래 날짜와 정보를 가진 Object Array를 출력하는 코드로 작성했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cheerio\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> axios <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"axios\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//크롤링 대상 URL, axios의 get은 비동기 함수이므로 async-await을 사용한다.</span>\n  <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://openinsider.com/insider-purchases-25k\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> trElements <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#tablewrapper > table > tbody > tr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> insiderTradeData <span class=\"token operator\">=</span> trElements\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> tr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"td:nth-child(3) > div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">ticker</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"td:nth-child(4) > b > a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>insiderTradeData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"실행\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#%EC%8B%A4%ED%96%89\" aria-label=\"실행 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행</h3>\n<p class=\"my-4 whitespace-pre-wrap\"><code class=\"language-text\">node index</code>로 실행해보면 결과는 다음과 같이 크롤링된 정보들을 확인할 수 있다.</p>\n<p class=\"my-4 whitespace-pre-wrap\"><img src=\"https://user-images.githubusercontent.com/71566740/133531609-93363fba-e51e-47aa-b03a-5cad03bc1795.png\" alt=\"test\" class=\"max-w-full rounded-sm my-12 mx-auto\"></p>\n<h2 id=\"마지막으로\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C\" aria-label=\"마지막으로 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로</h2>\n<ul class=\"list-disc ml-5\">\n<li class=\"list-item\">\n<p class=\"my-4 whitespace-pre-wrap\">위에서 사용했던 http 라이브러리나 parsing 라이브러리 둘 다 크롤링에 활용 가능한 도구이지 '크롤링만을 위한 도구'가 아니다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">해당 라이브러리가 어떤 역할을 하는지 직접 찾아보는게 좋다.</p>\n</li>\n<li class=\"list-item\">\n<p class=\"my-4 whitespace-pre-wrap\">크롤링은 꼭 개발자가 아니더라도 원하는 데이터를 자급자족할 수 있다는 점에서 활용도가 높다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">위에서 다뤘던 예제는 기초적인 크롤링 방법만을 다룬 것이므로 실제 크롤링을 이용해 무언가를 하려면 대상의 URL 규칙성, 페이지의 구조 등을 직접 분석해보면서 코드를 작성하는 방법을 고민해봐야 한다.</p>\n</li>\n<li class=\"list-item\">\n<p class=\"my-4 whitespace-pre-wrap\">크롤링은 사람이 직접 데이터를 수집하는 것보다 훨씬 빠른 속도로 서버에 다수에 요청을 보내서 데이터를 응답받기 때문에 크롤링 대상 서버에 문제를 발생시킬 수 있다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">위와 같은 이유로 크롤링이 차단되어 있는 사이트들도 있으니 크롤링이 허용되어 있는 사이트인지 확인하는 것도 중요하다.</p>\n</li>\n<li class=\"list-item\">\n<p class=\"my-4 whitespace-pre-wrap\">크롤링으로 처벌을 받은 판례가 있으니 실제 서비스를 위한 코드를 작성할 때는 해당 정보가 크롤링이 허용되는 정보인지 잘 확인해 보시고 사용하는 게 좋을 것 같다.</p>\n</li>\n</ul>","headings":[{"depth":2,"value":"크롤링(Crawling)","id":"크롤링crawling"},{"depth":2,"value":"도구 선택","id":"도구-선택"},{"depth":3,"value":"📚 Node.js 라이브러리","id":"-nodejs-라이브러리"},{"depth":4,"value":"HTTP 라이브러리: Axios","id":"http-라이브러리-axios"},{"depth":4,"value":"Parsing 라이브러리: Cheerio","id":"parsing-라이브러리-cheerio"},{"depth":2,"value":"개발환경 설정","id":"개발환경-설정"},{"depth":3,"value":"새 프로젝트 생성","id":"새-프로젝트-생성"},{"depth":3,"value":"사용할 node.js 모듈 설치","id":"사용할-nodejs-모듈-설치"},{"depth":2,"value":"크롤링 맛보기","id":"크롤링-맛보기"},{"depth":3,"value":"index.js","id":"indexjs"},{"depth":3,"value":"실행","id":"실행"},{"depth":2,"value":"마지막으로","id":"마지막으로"}],"frontmatter":{"title":"크롤링을 통한 데이터 수집하기","date":"21년 08월 31일","description":"Node.js 크롤링을 통한 데이터 수집","tags":["data"]}},"previous":{"fields":{"slug":"/copilot-review/"},"frontmatter":{"title":"Copilot 사용 후기","titleImage":"https://user-images.githubusercontent.com/71566740/131648745-0ab54f7e-d004-434e-89d8-d401b8719f51.png"}},"next":{"fields":{"slug":"/sass-compiler/"},"frontmatter":{"title":"Live Sass Compiler 사용하기","titleImage":"https://user-images.githubusercontent.com/71566740/133248000-62950c37-88dd-491e-8d1f-f0e8c66241e0.png"}}},"pageContext":{"id":"482be25c-443d-5e74-a05b-5a1bd503c7db","previousPostId":"cc2f82a5-d34d-534e-9d24-9ca58eca2a5f","nextPostId":"2d211d2a-c40f-51de-93b7-de5410bd1bfa"}},"staticQueryHashes":["2964855266","3766628212","4278130389","825490659"],"slicesMap":{}}