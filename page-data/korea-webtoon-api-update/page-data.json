{
    "componentChunkName": "component---src-templates-markdown-layout-tsx",
    "path": "/korea-webtoon-api-update/",
    "result": {"data":{"markdownRemark":{"html":"<h2>웹툰 API - Korea Webtoon API</h2>\n<img src=\"https://user-images.githubusercontent.com/71566740/142148364-0c963e54-4709-43f4-828a-93cf62073354.png\" class=\"img large\"/>\n<p>이전에 2020년 말쯤 웹툰 통합 정보 사이트를 만들어 보자는 생각으로 Webtoon Hub라는 토이 프로젝트를 진행하면서 필요했던 웹툰 정보들을 뿌려주는 서버를 만들었습니다.</p>\n<p>프로젝트를 완성하고 해당 API를 버려두긴 아까워서 문서도 만들고 공개로 호스팅으로 돌리면서 대학교 동기나 후배들에게 제공하고 있었습니다.</p>\n<h3>💥 Daum 웹툰의 개편</h3>\n<p>2021년 8월 기존 Daum 웹툰이 Kakao 웹툰으로 개편되었습니다.</p>\n<p>단순 명칭 변경이 아닌 실제 페이지에 많은 변화가 있었는데 이 때문에 기존에 만들어 두었던 API 사용이 불가능한 상황이라 해당 프로젝트를 업데이트하게 되었습니다.</p>\n<h3>👉 Korea Webtoon API의 업데이트</h3>\n<p>기존 API는 Express 기반으로 JSON 형태의 데이터를 제공하고 있었는데 각 플랫폼별로 크롤링 모듈을 따로 설계해 두어서 사실 해당 모듈만 수정하면 되는 작업이었지만 그동안 벼르고 있었던 NestJS를 써보자는 생각으로 오히려 Naver 웹툰 크롤러 모듈을 제외한 모든 코드를 다시 작성하게 되었습니다.</p>\n<p><br/>추가로 카카오 페이지 플랫폼의 웹툰 정보들도 제공할 수 있도록 추가했습니다.</p>\n<h2>웹툰 정보 수집</h2>\n<h3><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Naver</title><path d=\"M1.6 0S0 0 0 1.6v20.8S0 24 1.6 24h20.8s1.6 0 1.6-1.6V1.6S24 0 22.4 0zm3.415 5.6h4.78l4.425 6.458V5.6h4.765v12.8h-4.78L9.78 11.943V18.4H5.015Z\"/></svg> Naver 웹툰</h3>\n<p>Naver 웹툰 크롤링이 모든 부분들 중 가장 쉬웠습니다.</p>\n<p>사실 이전에 크롤링 코드를 모듈화 해놓고 그 부분은 건들지 않아도 정상 작동해서 이번 업데이트에서는 결과 데이터 형식을 제외하고는 크게 수정한 부분이 없습니다.</p>\n<p>한 페이지에 있는 웹툰들은 모두 한 번에 표시되는 방식이었고 딱히 크롤링을 방지하기 위한 장치도 없었습니다.</p>\n<p>다만 속도를 위해 PC 페이지가 아닌 모바일 페이지를 대상으로 크롤링했습니다.</p>\n<h3><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Kakao</title><path d=\"M3.0743 10.4403l.655.4728-1.6101 2.0192 1.8647 2.2373-.646.5004-2.201-2.6924zm-2.2376 5.102H0V8.5121l.8367-.182zm20.944-4.3837c-.4364 0-.7715.1637-1.0049.4912-.2338.3274-.3505.8064-.3505 1.437 0 .6247.1167 1.096.3505 1.4143.2334.3183.5685.4775 1.0049.4775.4423 0 .7804-.1593 1.0143-.4775.2332-.3182.35-.7896.35-1.4142 0-.6307-.1168-1.1097-.35-1.4371-.234-.3275-.572-.4912-1.0143-.4912m0-.673c.691 0 1.234.2245 1.6277.673.3944.4488.5916 1.0915.5916 1.9283 0 .8244-.1955 1.4583-.5868 1.901-.3909.4422-.9356.6637-1.6325.6637-.691 0-1.234-.2215-1.6277-.6638-.3944-.4426-.5916-1.0765-.5916-1.901 0-.8367.1984-1.4794.5957-1.9282.3973-.4485.9385-.673 1.6236-.673m-5.534 4.4658a1.496 1.496 0 0 0 .3576-.0456 2.8804 2.8804 0 0 0 .3713-.1181 2.0066 2.0066 0 0 0 .3488-.1774 2.0778 2.0778 0 0 0 .2895-.2229v-1.1641h-.8693c-.441 0-.7626.0758-.9645.2274-.2025.1516-.3031.391-.3031.7185 0 .5214.2563.7822.7697.7822m-1.5704-.7458c0-.5032.1682-.887.5045-1.1504.337-.2638.826-.396 1.4691-.396h.964v-.3182c0-.77-.3393-1.155-1.0185-1.155-.2184 0-.447.0304-.6869.091-.2398.0608-.4594.1365-.659.2274l-.2457-.5913c.2487-.1394.517-.2469.8047-.323.2878-.0754.5685-.1136.8414-.1136 1.176 0 1.7646.6276 1.7646 1.8826v3.1833h-.6188l-.1-.5457c-.2488.2001-.5134.3547-.796.464-.2817.1092-.55.1637-.8046.1637-.4429 0-.7899-.1258-1.0416-.3775-.2515-.2517-.3772-.5987-.3772-1.0413m-1.6508-3.7653l.655.4728-1.6095 2.0192 1.864 2.2373-.6454.5004-2.201-2.6924zm-2.237 5.102h-.8367V8.5121l.8368-.182zm-4.4936-.5909c.1148 0 .2339-.0151.3576-.0456a2.8794 2.8794 0 0 0 .3713-.1181 1.9842 1.9842 0 0 0 .3488-.1774 2.0477 2.0477 0 0 0 .29-.2229v-1.1641h-.8698c-.4404 0-.762.0758-.9645.2274-.202.1516-.3031.391-.3031.7185 0 .5214.2563.7822.7697.7822m-1.5704-.7458c0-.5032.1682-.887.5052-1.1504.3363-.2638.826-.396 1.4684-.396h.9646v-.3182c0-.77-.3399-1.155-1.019-1.155-.218 0-.4471.0304-.6863.091-.2398.0608-.4595.1365-.6597.2274l-.2457-.5913c.2487-.1394.517-.2469.8053-.323.2878-.0754.5684-.1136.8408-.1136 1.1766 0 1.7646.6276 1.7646 1.8826v3.1833h-.6182l-.1001-.5457c-.2487.2001-.514.3547-.7958.464-.282.1092-.5501.1637-.8053.1637-.4423 0-.7893-.1258-1.041-.3775-.2516-.2517-.3778-.5987-.3778-1.0413Z\"/></svg> Kakao 웹툰</h3>\n<p>카카오 웹툰은 특이하게 Kakao 웹툰과 페이지로 나눠 저 서비스되고 있습니다.</p>\n<p>처음에는 Naver 웹툰의 크롤러처럼 사이트 자체를 크롤링해서 정보를 얻으려고 시도했지만 Kakao 웹툰은 초기에 모든 정보들을 가져와 웹에 뿌려주는 방식이 아닌 필요할 때 서버에 요청해 그때그때 필요한 데이터들을 가져와 뿌려주는 방식이라 성능이 좋지 못했습니다.</p>\n<p>그 밖에도 이 방법은 여러 가지 문제점이 많았고 정말 여러 가지 방법을 시도했던 것 같습니다.</p>\n<p>이 부분에 대해서는 아래 '<strong>🔥 발생했던 이슈</strong>'에 후술 하겠습니다.</p>\n<p><br/>사실 Kakao 웹툰으로 개편되기 이전 Daum 웹툰에서는 사이트에서 발생하는 요청들을 개발자 도구로 분석해보면 요청을 보내는 URL을 찾을 수 있었고 별다른 인증 없이 외부 클라이언트에서도 같은 데이터를 요청할 수 있었습니다.</p>\n<p>당연히 이 부분이 막혔을 것이라 생각했지만 Kakao 웹툰에서도 요청 URL만 바뀌었을 뿐 여전히 가능했습니다.</p>\n<p><br/>이런 방법이 가능하다면 HTML 코드를 파싱 하는 단계를 건너뛰고 요청과 응답 자체도 웹 페이지 자체를 크롤링하는 보다 훨씬 빨랐으므로 Kakao 웹툰과 페이지 둘 다 위 방법으로 데이터를 수집했습니다.</p>\n<h3>🔥 발생했던 이슈</h3>\n<p>처음에 카카오 웹툰의 웹 페이지 자체를 크롤링하면서 생겼던 문제들입니다.</p>\n<h4>일반적인 사용자 접근이 아니면 페이지 자체 접근 차단</h4>\n<ul>\n<li>puppeteer가 핸들링하는 chromium에 사용자 정보를 추가</li>\n</ul>\n<h4>짧은 시간내에 여러번 요청을 보내면 사이트에서 해당 IP를 일시적으로 차단</h4>\n<ul>\n<li>새로운 페이지를 여는 딜레이를 크게 잡음(크롤링 속도 느려짐)</li>\n</ul>\n<h4>카카오 웹툰 페이지의 각 element들의 속성이 불규칙하고 구조가 복잡함</h4>\n<ul>\n<li>불규칙한 부분이나 구조가 복잡한 부분은 puppeteer로 직접 핸들링해서 크롤링하고 규칙적인 속성들만 우선적으로 크롤링(크롤링 속도 느려짐)</li>\n</ul>\n<h4>해외 IP 차단(Heroku = 미국 서버)</h4>\n<ul>\n<li>프록시를 사용하여 데이터 수집(속도 느려짐, 프록시 상태에 의존)</li>\n</ul>\n<p><br/>결국 전혀 다른 방법을 사용하게 되었지만 해당 부분을 해결하기 위해 쓴 시간과 노력이 아까워 코드를 따로 분리해 <a href=\"https://github.com/HyeokjaeLee/kakao-webtoon-crawler\">kakao-webtoon-crawler repository</a>에 저장해두었습니다.</p>\n<h2>마지막으로</h2>\n<p>이번에 Express 코드를 NestJS로 바꾸면서 확실히 구조가 잘 정리된다는 느낌을 받았습니다.</p>\n<p>그리고 Express를 사용할 때보다 기본적으로 제공하고 있는 기능들이 많아서 초기 설정에 많은 시간을 들이지 않아도 된다는 점도 매우 편리했습니다.</p>\n<p>앞으로도 NestJS를 사용한 프로젝트들을 많이 진행해볼 생각입니다.</p>\n<p><br/>해당 API의 코드는 <a href=\"https://github.com/HyeokjaeLee/korea-webtoon-api\">korea-webtoon-api repository</a>에 공개되어있습니다.</p>","frontmatter":{"emoji":"🚀","title":"Korea Webtoon API 업데이트","date":"2021-11-17","description":"Daum 웹툰의 대규모 변화로 인한 API 업데이트","tag":["Project"]},"fields":{"slug":"/korea-webtoon-api-update/"},"id":"70e1cf28-97c5-594c-ab1d-16d4ec69657c"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/korea-webtoon-api-update/"},"frontmatter":{"description":"Daum 웹툰의 대규모 변화로 인한 API 업데이트","title":"Korea Webtoon API 업데이트"},"id":"70e1cf28-97c5-594c-ab1d-16d4ec69657c"},{"fields":{"slug":"/nest-js/"},"frontmatter":{"description":"Typescript를 이용한 NestJS 코드 작성","title":"NestJS 웹서버 구축하기"},"id":"305141a9-5929-57a3-aeed-d6841c809e43"},{"fields":{"slug":"/knu-lms-scheduler/"},"frontmatter":{"description":"공주대학교 비대면 강의 시스템 UI 개선 프로젝트","title":"KNU LMS Scheduler 프로젝트"},"id":"c650e111-86f5-5201-b9f9-d40fccf2a8eb"},{"fields":{"slug":"/gititle-project/"},"frontmatter":{"description":"좋은 커밋 메시지를 작성하기 위한 프로젝트","title":"Gititle 프로젝트"},"id":"59da09b0-cfe8-5387-8b2c-18728bc48eb5"},{"fields":{"slug":"/sass-compiler/"},"frontmatter":{"description":"편리한 Sass 사용을 위한 익스텐션","title":"Live Sass Compiler 사용하기"},"id":"cddd5b1b-eb1c-5a3a-bf59-e59f20abc909"},{"fields":{"slug":"/nodejs-crawling/"},"frontmatter":{"description":"Node.js 크롤링을 통한 데이터 수집","title":"크롤링을 통한 데이터 수집하기"},"id":"2a3b304d-fff2-5587-9a14-4f3a1864ba1d"},{"fields":{"slug":"/copilot-review/"},"frontmatter":{"description":"Github의 코딩 AI, Copilot 한 달 사용 리뷰","title":"Copilot 사용 후기"},"id":"8a284f98-aa79-5a11-9f60-17da05b03882"},{"fields":{"slug":"/typescript-express/"},"frontmatter":{"description":"Typescript를 이용한 Express 코드 작성","title":"Typescript + Express 웹서버 구축하기"},"id":"7de321b0-d894-5d5a-a7e1-058f7c309364"},{"fields":{"slug":"/blog-remake-review1/"},"frontmatter":{"description":"해당 블로그 제작 중간 리뷰","title":"Next.js에서 Gatsby로 블로그 이사 중간 리뷰"},"id":"4cfa4a82-589b-5649-8fd0-5cbb6f48d40b"},{"fields":{"slug":"/good-commit-message/"},"frontmatter":{"description":"Commit Message 작성을 위한 나와의 약속","title":"Git Commit Message Convention"},"id":"98992a08-a70f-5f2e-b087-f3ddf6331f1d"}]}},"pageContext":{"slug":"/korea-webtoon-api-update/"}},
    "staticQueryHashes": []}